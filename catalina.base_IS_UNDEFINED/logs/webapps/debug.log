2019-01-09 09:27:40:737 [main] DEBUG com.chq.ssmshop.SSMshopApplication - Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2019-01-09 09:31:11:658 [http-nio-8080-exec-5] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopCategoryDao.queryShopCategory] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 09:31:11:658 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 09:31:12:775 [http-nio-8080-exec-5] DEBUG c.c.ssmshop.dao.ShopCategoryDao.queryShopCategory - ==>  Preparing: select * from tb_shop_category WHERE parent_id is null 
2019-01-09 09:31:12:843 [http-nio-8080-exec-5] DEBUG c.c.ssmshop.dao.ShopCategoryDao.queryShopCategory - ==> Parameters: 
2019-01-09 09:31:12:960 [http-nio-8080-exec-5] DEBUG c.c.ssmshop.dao.ShopCategoryDao.queryShopCategory - <==      Total: 7
2019-01-09 09:31:13:195 [http-nio-8080-exec-5] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.HeadLineDao.queryHeadLine] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 09:31:13:195 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 09:31:13:198 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.HeadLineDao.queryHeadLine - ==>  Preparing: select * from tb_head_line WHERE enable_status=? 
2019-01-09 09:31:13:199 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.HeadLineDao.queryHeadLine - ==> Parameters: 1(Integer)
2019-01-09 09:31:13:257 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.HeadLineDao.queryHeadLine - <==      Total: 4
2019-01-09 09:34:48:292 [http-nio-8080-exec-8] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopCategoryDao.queryShopCategory] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 09:34:48:292 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 09:34:48:292 [http-nio-8080-exec-8] DEBUG c.c.ssmshop.dao.ShopCategoryDao.queryShopCategory - ==>  Preparing: select * from tb_shop_category WHERE parent_id is null 
2019-01-09 09:34:48:293 [http-nio-8080-exec-8] DEBUG c.c.ssmshop.dao.ShopCategoryDao.queryShopCategory - ==> Parameters: 
2019-01-09 09:34:48:340 [http-nio-8080-exec-8] DEBUG c.c.ssmshop.dao.ShopCategoryDao.queryShopCategory - <==      Total: 6
2019-01-09 09:34:59:302 [http-nio-8080-exec-7] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.LocalAuthDao.queryLocalByUserNameAndPwd] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 09:34:59:302 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 09:34:59:302 [http-nio-8080-exec-7] DEBUG c.c.s.dao.LocalAuthDao.queryLocalByUserNameAndPwd - ==>  Preparing: select la.local_auth_id, la.username, la.password, la.create_time as la_create_time, la.last_edit_time as la_last_edit_time, la.person_info, pi.user_id, pi.name, pi.email, pi.gender, pi.enable_status, pi.user_type, pi.create_time as pi_create_time, pi.last_edit_time as pi_last_edit_time from tb_local_auth as la left join tb_person_info as pi on la.person_info = pi.user_id where la.username=? and la.password=? 
2019-01-09 09:34:59:303 [http-nio-8080-exec-7] DEBUG c.c.s.dao.LocalAuthDao.queryLocalByUserNameAndPwd - ==> Parameters: admin(String), 50565y5q2b92b9b2265q2b5s2b550ye6(String)
2019-01-09 09:34:59:352 [http-nio-8080-exec-7] DEBUG c.c.s.dao.LocalAuthDao.queryLocalByUserNameAndPwd - <==      Total: 1
2019-01-09 09:35:03:711 [http-nio-8080-exec-10] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.PersonInfoDao.queryPersonInfoByUserId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 09:35:03:711 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 09:35:03:712 [http-nio-8080-exec-10] DEBUG c.c.s.dao.PersonInfoDao.queryPersonInfoByUserId - ==>  Preparing: select * from tb_person_info where user_id=? 
2019-01-09 09:35:03:717 [http-nio-8080-exec-3] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopByOwnerId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 09:35:03:717 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 09:35:03:718 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopByOwnerId - ==>  Preparing: select tb_shop.shop_id, tb_shop.owner_id, tb_person_info.name, tb_shop.area_id, tb_area.area_name, tb_shop.shop_category_id, tb_shop_category.shop_category_name, tb_shop.shop_name, tb_shop.shop_desc, tb_shop.shop_addr, tb_shop.phone, tb_shop.shop_img, tb_shop.priority, tb_shop.create_time, tb_shop.last_edit_time, tb_shop.enable_status, tb_shop.advice from tb_shop, tb_area, tb_person_info, tb_shop_category where tb_shop.owner_id=? 
2019-01-09 09:35:03:718 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopByOwnerId - ==> Parameters: 1(Long)
2019-01-09 09:35:03:717 [http-nio-8080-exec-10] DEBUG c.c.s.dao.PersonInfoDao.queryPersonInfoByUserId - ==> Parameters: 1(Long)
2019-01-09 09:35:03:780 [http-nio-8080-exec-10] DEBUG c.c.s.dao.PersonInfoDao.queryPersonInfoByUserId - <==      Total: 1
2019-01-09 09:35:10:746 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopByOwnerId - <==      Total: 4158
2019-01-09 09:35:31:643 [http-nio-8080-exec-9] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 09:35:31:643 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 09:35:31:644 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 09:35:31:644 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: 1(Integer), 0(Integer), 3(Integer)
2019-01-09 09:35:31:697 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 3
2019-01-09 09:35:31:698 [http-nio-8080-exec-9] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 09:35:31:698 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 09:35:31:699 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 09:35:31:699 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: 1(Integer)
2019-01-09 09:35:31:751 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 09:35:31:937 [http-nio-8080-exec-5] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.AreaDao.listArea] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 09:35:31:938 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 09:35:31:938 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.AreaDao.listArea - ==>  Preparing: select * from tb_area order by priority desc; 
2019-01-09 09:35:31:939 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.AreaDao.listArea - ==> Parameters: 
2019-01-09 09:35:31:990 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.AreaDao.listArea - <==      Total: 3
2019-01-09 09:35:32:636 [http-nio-8080-exec-10] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 09:35:32:636 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 09:35:32:636 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 09:35:32:637 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: 1(Integer), 3(Integer), 3(Integer)
2019-01-09 09:35:32:687 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 3
2019-01-09 09:35:32:688 [http-nio-8080-exec-10] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 09:35:32:688 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 09:35:32:688 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 09:35:32:688 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: 1(Integer)
2019-01-09 09:35:32:740 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 09:35:33:459 [http-nio-8080-exec-2] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 09:35:33:460 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 09:35:33:461 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 09:35:33:462 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: 1(Integer), 6(Integer), 3(Integer)
2019-01-09 09:35:33:516 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 2
2019-01-09 09:35:33:517 [http-nio-8080-exec-2] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 09:35:33:517 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 09:35:33:518 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 09:35:33:518 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: 1(Integer)
2019-01-09 09:35:33:572 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 09:35:33:816 [http-nio-8080-exec-6] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 09:35:33:816 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 09:35:33:817 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 09:35:33:817 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: 1(Integer), 9(Integer), 3(Integer)
2019-01-09 09:35:33:875 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 0
2019-01-09 09:35:33:876 [http-nio-8080-exec-6] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 09:35:33:876 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 09:35:33:876 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 09:35:33:876 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: 1(Integer)
2019-01-09 09:35:33:933 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 09:35:34:477 [http-nio-8080-exec-7] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 09:35:34:478 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 09:35:34:480 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 09:35:34:481 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: 1(Integer), 12(Integer), 3(Integer)
2019-01-09 09:35:34:534 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 0
2019-01-09 09:35:34:536 [http-nio-8080-exec-7] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 09:35:34:536 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 09:35:34:537 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 09:35:34:537 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: 1(Integer)
2019-01-09 09:35:34:585 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 09:35:51:225 [http-nio-8080-exec-5] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 09:35:51:226 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 09:35:51:227 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 09:35:51:228 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: 1(Integer), 15(Integer), 3(Integer)
2019-01-09 09:35:51:280 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 0
2019-01-09 09:35:51:281 [http-nio-8080-exec-5] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 09:35:51:281 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 09:35:51:282 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 09:35:51:282 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: 1(Integer)
2019-01-09 09:35:51:335 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 09:35:51:356 [http-nio-8080-exec-10] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 09:35:51:356 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 09:35:51:357 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 09:35:51:358 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: 1(Integer), 18(Integer), 3(Integer)
2019-01-09 09:35:51:407 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 0
2019-01-09 09:35:51:408 [http-nio-8080-exec-10] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 09:35:51:409 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 09:35:51:409 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 09:35:51:410 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: 1(Integer)
2019-01-09 09:35:51:458 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 09:35:51:954 [http-nio-8080-exec-3] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 09:35:51:955 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 09:35:51:957 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 09:35:51:958 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: 1(Integer), 21(Integer), 3(Integer)
2019-01-09 09:35:52:013 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 0
2019-01-09 09:35:52:015 [http-nio-8080-exec-3] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 09:35:52:016 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 09:35:52:017 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 09:35:52:018 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: 1(Integer)
2019-01-09 09:35:52:079 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 09:35:52:102 [http-nio-8080-exec-1] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 09:35:52:102 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 09:35:52:103 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 09:35:52:103 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: 1(Integer), 24(Integer), 3(Integer)
2019-01-09 09:35:52:158 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 0
2019-01-09 09:35:52:158 [http-nio-8080-exec-1] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 09:35:52:158 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 09:35:52:159 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 09:35:52:159 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: 1(Integer)
2019-01-09 09:35:52:207 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 09:36:03:308 [http-nio-8080-exec-8] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 09:36:03:308 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 09:36:03:309 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 09:36:03:309 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: 1(Integer), 27(Integer), 3(Integer)
2019-01-09 09:36:03:369 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 0
2019-01-09 09:36:03:371 [http-nio-8080-exec-8] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 09:36:03:371 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 09:36:03:372 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 09:36:03:372 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: 1(Integer)
2019-01-09 09:36:03:425 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 09:36:03:593 [http-nio-8080-exec-2] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 09:36:03:593 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 09:36:03:594 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 09:36:03:595 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: 1(Integer), 30(Integer), 3(Integer)
2019-01-09 09:36:03:645 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 0
2019-01-09 09:36:03:646 [http-nio-8080-exec-2] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 09:36:03:647 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 09:36:03:647 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 09:36:03:650 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: 1(Integer)
2019-01-09 09:36:03:701 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 09:36:03:725 [http-nio-8080-exec-9] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 09:36:03:725 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 09:36:03:726 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 09:36:03:727 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: 1(Integer), 33(Integer), 3(Integer)
2019-01-09 09:36:03:786 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 0
2019-01-09 09:36:03:787 [http-nio-8080-exec-9] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 09:36:03:787 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 09:36:03:788 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 09:36:03:789 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: 1(Integer)
2019-01-09 09:36:03:841 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 09:36:15:905 [http-nio-8080-exec-4] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 09:36:15:905 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 09:36:15:906 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 09:36:15:907 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: 1(Integer), 36(Integer), 3(Integer)
2019-01-09 09:36:15:957 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 0
2019-01-09 09:36:15:957 [http-nio-8080-exec-4] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 09:36:15:957 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 09:36:15:957 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 09:36:15:958 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: 1(Integer)
2019-01-09 09:36:16:006 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 09:36:16:057 [http-nio-8080-exec-6] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 09:36:16:057 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 09:36:16:058 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 09:36:16:059 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: 1(Integer), 39(Integer), 3(Integer)
2019-01-09 09:36:16:120 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 0
2019-01-09 09:36:16:121 [http-nio-8080-exec-6] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 09:36:16:121 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 09:36:16:122 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 09:36:16:123 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: 1(Integer)
2019-01-09 09:36:16:180 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 10:25:36:316 [main] DEBUG com.chq.ssmshop.dao.ProductDaoTest - Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2019-01-09 10:25:39:742 [main] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 10:25:39:744 [main] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 10:25:40:649 [main] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT tp.product_id, tp.product_name, tp.product_desc, tp.img_addr, tp.normal_price, tp.promotion_price, tp.priority, tp.create_time, tp.last_edit_time, tp.enable_status, tp.product_category_id, tp.shop_id, tpc.product_category_name, ts.shop_name, tpi.product_img_id, tpi.img_addr, tpi.img_desc, tpi.priority, tpi.create_time, tpi.last_edit_time FROM tb_product AS tp, tb_product_category AS tpc, tb_shop AS ts LEFT JOIN tb_product_img as tpi ON tp.product_id=tpi.product_id WHERE tp.product_id=? ORDER BY tp.priority DESC 
2019-01-09 10:25:40:680 [main] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 1(Long)
2019-01-09 10:26:58:074 [main] DEBUG com.chq.ssmshop.dao.ProductDaoTest - Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2019-01-09 10:27:01:486 [main] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 10:27:01:487 [main] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 10:27:02:430 [main] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT tp.product_id, tp.product_name, tp.product_desc, tp.img_addr, tp.normal_price, tp.promotion_price, tp.priority, tp.create_time, tp.last_edit_time, tp.enable_status, tp.product_category_id, tp.shop_id, tpc.product_category_name, ts.shop_name, tpi.product_img_id, tpi.img_addr, tpi.img_desc, tpi.priority, tpi.create_time, FROM tb_product AS tp, tb_product_category AS tpc, tb_shop AS ts LEFT JOIN tb_product_img as tpi ON tp.product_id=tpi.product_id WHERE tp.product_id=? ORDER BY tp.priority DESC 
2019-01-09 10:27:02:456 [main] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 1(Long)
2019-01-09 10:27:40:820 [main] DEBUG com.chq.ssmshop.dao.ProductDaoTest - Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2019-01-09 10:27:44:264 [main] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 10:27:44:265 [main] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 10:27:45:838 [main] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT tp.product_id, tp.product_name, tp.product_desc, tp.img_addr, tp.normal_price, tp.promotion_price, tp.priority, tp.create_time, tp.last_edit_time, tp.enable_status, tp.product_category_id, tp.shop_id, tpc.product_category_name, ts.shop_name, tpi.product_img_id, tpi.img_addr, tpi.img_desc, tpi.priority, tpi.create_time FROM tb_product AS tp, tb_product_category AS tpc, tb_shop AS ts LEFT JOIN tb_product_img as tpi ON tp.product_id=tpi.product_id WHERE tp.product_id=? ORDER BY tp.priority DESC 
2019-01-09 10:27:45:861 [main] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 1(Long)
2019-01-09 10:28:41:781 [main] DEBUG com.chq.ssmshop.dao.ProductDaoTest - Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2019-01-09 10:28:45:003 [main] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 10:28:45:004 [main] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 10:28:45:893 [main] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT tp.product_id, tp.product_name, tp.product_desc, tp.img_addr, tp.normal_price, tp.promotion_price, tp.priority, tp.create_time, tp.last_edit_time, tp.enable_status, tp.product_category_id, tp.shop_id, tpc.product_category_name, ts.shop_name, tpi.product_img_id, tpi.img_addr, tpi.img_desc, tpi.priority, tpi.create_time FROM tb_product AS tp, tb_product_category AS tpc, tb_shop AS ts LEFT JOIN tb_product_img as tpi ON tb_product.product_id=tb_product_img.product_id WHERE tp.product_id=? ORDER BY tp.priority DESC 
2019-01-09 10:28:45:920 [main] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 1(Long)
2019-01-09 10:30:50:763 [main] DEBUG com.chq.ssmshop.dao.ProductDaoTest - Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2019-01-09 10:30:54:258 [main] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 10:30:54:259 [main] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 10:30:55:266 [main] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT tp.product_id, tp.product_name, tp.product_desc, tp.img_addr, tp.normal_price, tp.promotion_price, tp.priority, tp.create_time, tp.last_edit_time, tp.enable_status, tp.product_category_id, tp.shop_id, tpc.product_category_name, ts.shop_name, tpi.product_img_id, tpi.img_addr, tpi.img_desc, tpi.priority, tpi.create_time FROM tb_product AS tp, tb_product_category AS tpc, tb_shop AS ts LEFT JOIN tb_product_img as tpi ON product_id=tb_product_img.product_id WHERE tp.product_id=? ORDER BY tp.priority DESC 
2019-01-09 10:30:55:296 [main] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 1(Long)
2019-01-09 10:35:17:695 [main] DEBUG com.chq.ssmshop.dao.ProductDaoTest - Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2019-01-09 10:35:20:943 [main] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 10:35:20:944 [main] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 10:35:21:959 [main] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT tp.product_name, tp.product_desc, tp.img_addr, tp.normal_price, tp.promotion_price, tp.priority, tp.create_time, tp.last_edit_time, tp.enable_status, tp.product_category_id, tp.shop_id, tpc.product_category_name, ts.shop_name, tpi.product_img_id, tpi.img_addr, tpi.img_desc, tpi.priority, tpi.create_time FROM tb_product AS tp, tb_product_category AS tpc, tb_shop AS ts LEFT JOIN tb_product_img as tpi ON tp.product_id=tpi.product_id WHERE tp.product_id=? ORDER BY tp.priority DESC 
2019-01-09 10:35:21:983 [main] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 1(Long)
2019-01-09 10:36:00:094 [main] DEBUG com.chq.ssmshop.dao.ProductDaoTest - Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2019-01-09 10:36:02:492 [main] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 10:36:02:492 [main] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 10:36:03:400 [main] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT tp.product_name, tp.product_desc, tp.img_addr, tp.normal_price, tp.promotion_price, tp.priority, tp.create_time, tp.last_edit_time, tp.enable_status, tp.product_category_id, tp.shop_id, tpc.product_category_name, ts.shop_name, tpi.product_img_id, tpi.img_addr, tpi.img_desc, tpi.priority, tpi.create_time FROM tb_product AS tp, tb_product_category AS tpc, tb_shop AS ts LEFT JOIN tb_product_img as tpi ON tb_product.product_id=tb_product_img.product_id WHERE tp.product_id=? ORDER BY tp.priority DESC 
2019-01-09 10:36:03:432 [main] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 1(Long)
2019-01-09 10:40:51:865 [main] DEBUG com.chq.ssmshop.dao.ProductDaoTest - Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2019-01-09 10:40:55:378 [main] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 10:40:55:378 [main] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 10:40:56:434 [main] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.point, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id = pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2019-01-09 10:40:56:458 [main] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 1(Long)
2019-01-09 10:41:25:170 [main] DEBUG com.chq.ssmshop.dao.ProductDaoTest - Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2019-01-09 10:41:27:555 [main] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 10:41:27:556 [main] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 10:41:28:359 [main] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id = pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2019-01-09 10:41:28:379 [main] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 1(Long)
2019-01-09 10:41:28:443 [main] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - <==      Total: 1
2019-01-09 10:42:31:052 [main] DEBUG com.chq.ssmshop.dao.ProductDaoTest - Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2019-01-09 10:42:34:357 [main] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 10:42:34:357 [main] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 10:42:35:240 [main] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id = pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2019-01-09 10:42:35:265 [main] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 1(Long)
2019-01-09 10:42:35:354 [main] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - <==      Total: 1
2019-01-09 10:43:46:655 [main] DEBUG com.chq.ssmshop.dao.ProductDaoTest - Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2019-01-09 10:43:50:019 [main] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 10:43:50:020 [main] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 10:43:51:307 [main] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id = pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2019-01-09 10:43:51:350 [main] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 10(Long)
2019-01-09 10:43:51:425 [main] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - <==      Total: 1
2019-01-09 11:07:07:445 [main] DEBUG com.chq.ssmshop.SSMshopApplication - Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2019-01-09 11:17:49:859 [http-nio-8080-exec-3] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 11:17:49:859 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 11:17:50:871 [http-nio-8080-exec-3] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id = pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2019-01-09 11:17:50:942 [http-nio-8080-exec-3] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 10(Long)
2019-01-09 11:17:51:028 [http-nio-8080-exec-3] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - <==      Total: 1
2019-01-09 11:19:22:618 [main] DEBUG com.chq.ssmshop.SSMshopApplication - Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2019-01-09 11:19:26:291 [http-nio-8080-exec-1] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 11:19:26:292 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 11:19:27:375 [http-nio-8080-exec-1] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id = pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2019-01-09 11:19:27:424 [http-nio-8080-exec-1] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 10(Long)
2019-01-09 11:19:27:503 [http-nio-8080-exec-1] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - <==      Total: 1
2019-01-09 11:19:36:073 [http-nio-8080-exec-3] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 11:19:36:073 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 11:19:36:082 [http-nio-8080-exec-3] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id = pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2019-01-09 11:19:36:084 [http-nio-8080-exec-3] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 10(Long)
2019-01-09 11:19:36:136 [http-nio-8080-exec-3] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - <==      Total: 1
2019-01-09 11:19:54:287 [http-nio-8080-exec-4] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 11:19:54:288 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 11:19:54:288 [http-nio-8080-exec-4] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id = pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2019-01-09 11:19:54:289 [http-nio-8080-exec-4] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 10(Long)
2019-01-09 11:19:54:343 [http-nio-8080-exec-4] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - <==      Total: 1
2019-01-09 11:20:00:587 [main] DEBUG com.chq.ssmshop.SSMshopApplication - Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2019-01-09 11:20:07:092 [http-nio-8080-exec-1] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 11:20:07:093 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 11:20:08:008 [http-nio-8080-exec-1] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id = pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2019-01-09 11:20:08:052 [http-nio-8080-exec-1] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 10(Long)
2019-01-09 11:20:08:187 [http-nio-8080-exec-1] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - <==      Total: 1
2019-01-09 11:20:35:730 [http-nio-8080-exec-5] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 11:20:35:730 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 11:20:35:734 [http-nio-8080-exec-5] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id = pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2019-01-09 11:20:35:734 [http-nio-8080-exec-5] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 10(Long)
2019-01-09 11:20:35:789 [http-nio-8080-exec-5] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - <==      Total: 1
2019-01-09 11:23:15:462 [http-nio-8080-exec-4] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 11:23:15:462 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 11:23:15:462 [http-nio-8080-exec-4] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id = pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2019-01-09 11:23:15:463 [http-nio-8080-exec-4] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 10(Long)
2019-01-09 11:23:15:515 [http-nio-8080-exec-4] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - <==      Total: 1
2019-01-09 11:23:29:817 [http-nio-8080-exec-2] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 11:23:29:818 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 11:23:29:818 [http-nio-8080-exec-2] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id = pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2019-01-09 11:23:29:818 [http-nio-8080-exec-2] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 10(Long)
2019-01-09 11:23:29:872 [http-nio-8080-exec-2] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - <==      Total: 1
2019-01-09 14:13:14:849 [http-nio-8080-exec-2] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 14:13:14:849 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 14:13:14:849 [http-nio-8080-exec-2] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id = pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2019-01-09 14:13:14:850 [http-nio-8080-exec-2] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 10(Long)
2019-01-09 14:13:14:899 [http-nio-8080-exec-2] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - <==      Total: 1
2019-01-09 14:13:51:152 [http-nio-8080-exec-1] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 14:13:51:152 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 14:13:51:152 [http-nio-8080-exec-1] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id = pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2019-01-09 14:13:51:153 [http-nio-8080-exec-1] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 10(Long)
2019-01-09 14:13:51:204 [http-nio-8080-exec-1] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - <==      Total: 1
2019-01-09 14:15:43:947 [http-nio-8080-exec-9] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 14:15:43:948 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 14:15:43:948 [http-nio-8080-exec-9] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id = pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2019-01-09 14:15:43:948 [http-nio-8080-exec-9] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 10(Long)
2019-01-09 14:15:44:004 [http-nio-8080-exec-9] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - <==      Total: 1
2019-01-09 14:17:58:508 [http-nio-8080-exec-2] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 14:17:58:508 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 14:17:58:508 [http-nio-8080-exec-2] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id = pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2019-01-09 14:17:58:508 [http-nio-8080-exec-2] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 10(Long)
2019-01-09 14:17:58:562 [http-nio-8080-exec-2] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - <==      Total: 1
2019-01-09 14:18:32:153 [http-nio-8080-exec-6] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 14:18:32:154 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 14:18:32:154 [http-nio-8080-exec-6] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id = pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2019-01-09 14:18:32:154 [http-nio-8080-exec-6] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 10(Long)
2019-01-09 14:18:32:209 [http-nio-8080-exec-6] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - <==      Total: 1
2019-01-09 14:23:32:619 [http-nio-8080-exec-2] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 14:23:32:619 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 14:23:32:619 [http-nio-8080-exec-2] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id = pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2019-01-09 14:23:32:620 [http-nio-8080-exec-2] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 10(Long)
2019-01-09 14:23:32:678 [http-nio-8080-exec-2] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - <==      Total: 1
2019-01-09 14:23:57:159 [http-nio-8080-exec-8] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 14:23:57:159 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 14:23:57:160 [http-nio-8080-exec-8] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id = pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2019-01-09 14:23:57:160 [http-nio-8080-exec-8] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 10(Long)
2019-01-09 14:23:57:214 [http-nio-8080-exec-8] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - <==      Total: 1
2019-01-09 14:24:24:914 [http-nio-8080-exec-1] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 14:24:24:914 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 14:24:24:914 [http-nio-8080-exec-1] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id = pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2019-01-09 14:24:24:915 [http-nio-8080-exec-1] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 10(Long)
2019-01-09 14:24:24:965 [http-nio-8080-exec-1] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - <==      Total: 1
2019-01-09 14:25:16:909 [http-nio-8080-exec-7] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 14:25:16:909 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 14:25:16:910 [http-nio-8080-exec-7] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id = pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2019-01-09 14:25:16:910 [http-nio-8080-exec-7] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 10(Long)
2019-01-09 14:25:16:961 [http-nio-8080-exec-7] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - <==      Total: 1
2019-01-09 14:31:24:681 [http-nio-8080-exec-5] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 14:31:24:681 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 14:31:24:681 [http-nio-8080-exec-5] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id = pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2019-01-09 14:31:24:681 [http-nio-8080-exec-5] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 10(Long)
2019-01-09 14:31:24:737 [http-nio-8080-exec-5] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - <==      Total: 1
2019-01-09 14:34:07:914 [http-nio-8080-exec-1] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 14:34:07:914 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 14:34:07:914 [http-nio-8080-exec-1] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id = pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2019-01-09 14:34:07:915 [http-nio-8080-exec-1] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 10(Long)
2019-01-09 14:34:07:963 [http-nio-8080-exec-1] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - <==      Total: 1
2019-01-09 14:35:11:108 [http-nio-8080-exec-8] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 14:35:11:108 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 14:35:11:108 [http-nio-8080-exec-8] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id = pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2019-01-09 14:35:11:109 [http-nio-8080-exec-8] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 10(Long)
2019-01-09 14:35:11:161 [http-nio-8080-exec-8] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - <==      Total: 1
2019-01-09 14:36:45:176 [http-nio-8080-exec-2] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 14:36:45:176 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 14:36:45:176 [http-nio-8080-exec-2] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id = pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2019-01-09 14:36:45:176 [http-nio-8080-exec-2] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 10(Long)
2019-01-09 14:36:45:240 [http-nio-8080-exec-2] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - <==      Total: 1
2019-01-09 14:37:08:537 [http-nio-8080-exec-6] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 14:37:08:537 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 14:37:08:537 [http-nio-8080-exec-6] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id = pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2019-01-09 14:37:08:537 [http-nio-8080-exec-6] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 10(Long)
2019-01-09 14:37:08:583 [http-nio-8080-exec-6] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - <==      Total: 1
2019-01-09 14:37:39:997 [http-nio-8080-exec-5] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 14:37:39:997 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 14:37:39:997 [http-nio-8080-exec-5] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id = pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2019-01-09 14:37:39:998 [http-nio-8080-exec-5] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 10(Long)
2019-01-09 14:37:40:051 [http-nio-8080-exec-5] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - <==      Total: 1
2019-01-09 14:38:28:142 [http-nio-8080-exec-3] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 14:38:28:142 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 14:38:28:143 [http-nio-8080-exec-3] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id = pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2019-01-09 14:38:28:143 [http-nio-8080-exec-3] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 10(Long)
2019-01-09 14:38:28:199 [http-nio-8080-exec-3] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - <==      Total: 1
2019-01-09 14:39:15:869 [http-nio-8080-exec-10] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 14:39:15:869 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 14:39:15:869 [http-nio-8080-exec-10] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id = pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2019-01-09 14:39:15:869 [http-nio-8080-exec-10] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 10(Long)
2019-01-09 14:39:15:921 [http-nio-8080-exec-10] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - <==      Total: 1
2019-01-09 14:45:06:243 [http-nio-8080-exec-3] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 14:45:06:243 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 14:45:06:243 [http-nio-8080-exec-3] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id = pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2019-01-09 14:45:06:243 [http-nio-8080-exec-3] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 10(Long)
2019-01-09 14:45:06:300 [http-nio-8080-exec-3] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - <==      Total: 1
2019-01-09 14:47:02:606 [http-nio-8080-exec-7] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 14:47:02:607 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 14:47:02:607 [http-nio-8080-exec-7] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id = pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2019-01-09 14:47:02:607 [http-nio-8080-exec-7] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 4(Long)
2019-01-09 14:47:25:769 [main] DEBUG com.chq.ssmshop.SSMshopApplication - Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2019-01-09 14:47:31:991 [http-nio-8080-exec-6] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 14:47:31:992 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 14:47:32:986 [http-nio-8080-exec-6] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id = pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2019-01-09 14:47:33:019 [http-nio-8080-exec-6] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 4(Long)
2019-01-09 14:50:45:755 [http-nio-8080-exec-2] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 14:50:45:756 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 14:50:45:756 [http-nio-8080-exec-2] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id = pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2019-01-09 14:50:45:757 [http-nio-8080-exec-2] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 4(Long)
2019-01-09 14:50:52:564 [main] DEBUG com.chq.ssmshop.SSMshopApplication - Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2019-01-09 14:50:57:193 [http-nio-8080-exec-6] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 14:50:57:194 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 14:50:58:262 [http-nio-8080-exec-6] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id = pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2019-01-09 14:50:58:311 [http-nio-8080-exec-6] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 4(Long)
2019-01-09 14:50:58:388 [http-nio-8080-exec-6] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - <==      Total: 2
2019-01-09 14:52:38:606 [main] DEBUG com.chq.ssmshop.SSMshopApplication - Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2019-01-09 14:52:46:235 [http-nio-8080-exec-6] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 14:52:46:235 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 14:52:47:186 [http-nio-8080-exec-6] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr as pm_img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id = pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2019-01-09 14:52:47:249 [http-nio-8080-exec-6] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 4(Long)
2019-01-09 14:52:47:371 [http-nio-8080-exec-6] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - <==      Total: 2
2019-01-09 14:54:04:220 [http-nio-8080-exec-7] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 14:54:04:220 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 14:54:04:221 [http-nio-8080-exec-7] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr as pm_img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id = pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2019-01-09 14:54:04:221 [http-nio-8080-exec-7] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 4(Long)
2019-01-09 14:54:04:281 [http-nio-8080-exec-7] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - <==      Total: 2
2019-01-09 14:56:21:401 [http-nio-8080-exec-3] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 14:56:21:401 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 14:56:21:401 [http-nio-8080-exec-3] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr as pm_img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id = pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2019-01-09 14:56:21:402 [http-nio-8080-exec-3] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 10(Long)
2019-01-09 14:56:21:452 [http-nio-8080-exec-3] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - <==      Total: 1
2019-01-09 15:00:52:931 [http-nio-8080-exec-2] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:00:52:932 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:00:52:932 [http-nio-8080-exec-2] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr as pm_img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id = pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2019-01-09 15:00:52:932 [http-nio-8080-exec-2] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 10(Long)
2019-01-09 15:00:52:988 [http-nio-8080-exec-2] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - <==      Total: 1
2019-01-09 15:07:49:531 [http-nio-8080-exec-9] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:07:49:531 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:07:49:531 [http-nio-8080-exec-9] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr as pm_img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id = pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2019-01-09 15:07:49:532 [http-nio-8080-exec-9] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 10(Long)
2019-01-09 15:07:49:638 [http-nio-8080-exec-9] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - <==      Total: 1
2019-01-09 15:08:22:350 [http-nio-8080-exec-9] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:08:22:351 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:08:22:351 [http-nio-8080-exec-9] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr as pm_img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id = pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2019-01-09 15:08:22:351 [http-nio-8080-exec-9] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 4(Long)
2019-01-09 15:08:22:396 [http-nio-8080-exec-9] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - <==      Total: 2
2019-01-09 15:09:52:757 [http-nio-8080-exec-7] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:09:52:757 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:09:52:757 [http-nio-8080-exec-7] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr as pm_img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id = pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2019-01-09 15:09:52:758 [http-nio-8080-exec-7] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 4(Long)
2019-01-09 15:09:52:827 [http-nio-8080-exec-7] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - <==      Total: 2
2019-01-09 15:10:03:315 [http-nio-8080-exec-4] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:10:03:315 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:10:03:315 [http-nio-8080-exec-4] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr as pm_img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id = pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2019-01-09 15:10:03:315 [http-nio-8080-exec-4] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 4(Long)
2019-01-09 15:10:03:377 [http-nio-8080-exec-4] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - <==      Total: 2
2019-01-09 15:16:46:869 [http-nio-8080-exec-2] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopCategoryDao.queryShopCategory] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:16:46:869 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:16:46:869 [http-nio-8080-exec-2] DEBUG c.c.ssmshop.dao.ShopCategoryDao.queryShopCategory - ==>  Preparing: select * from tb_shop_category WHERE parent_id is null 
2019-01-09 15:16:46:869 [http-nio-8080-exec-2] DEBUG c.c.ssmshop.dao.ShopCategoryDao.queryShopCategory - ==> Parameters: 
2019-01-09 15:16:46:926 [http-nio-8080-exec-2] DEBUG c.c.ssmshop.dao.ShopCategoryDao.queryShopCategory - <==      Total: 6
2019-01-09 15:16:47:154 [http-nio-8080-exec-2] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.HeadLineDao.queryHeadLine] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:16:47:155 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:16:47:161 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.HeadLineDao.queryHeadLine - ==>  Preparing: select * from tb_head_line WHERE enable_status=? 
2019-01-09 15:16:47:162 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.HeadLineDao.queryHeadLine - ==> Parameters: 1(Integer)
2019-01-09 15:16:47:210 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.HeadLineDao.queryHeadLine - <==      Total: 4
2019-01-09 15:17:02:421 [http-nio-8080-exec-5] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:17:02:421 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:17:02:421 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 15:17:02:421 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: 1(Integer), 0(Integer), 3(Integer)
2019-01-09 15:17:02:479 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 3
2019-01-09 15:17:02:480 [http-nio-8080-exec-5] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:17:02:480 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:17:02:480 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 15:17:02:481 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: 1(Integer)
2019-01-09 15:17:02:532 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 15:17:02:771 [http-nio-8080-exec-4] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.AreaDao.listArea] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:17:02:771 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:17:02:772 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.AreaDao.listArea - ==>  Preparing: select * from tb_area order by priority desc; 
2019-01-09 15:17:02:773 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.AreaDao.listArea - ==> Parameters: 
2019-01-09 15:17:02:823 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.AreaDao.listArea - <==      Total: 3
2019-01-09 15:17:03:653 [http-nio-8080-exec-1] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:17:03:653 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:17:03:654 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 15:17:03:655 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: 1(Integer), 3(Integer), 3(Integer)
2019-01-09 15:17:03:707 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 3
2019-01-09 15:17:03:709 [http-nio-8080-exec-1] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:17:03:709 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:17:03:710 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 15:17:03:710 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: 1(Integer)
2019-01-09 15:17:03:758 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 15:17:04:348 [http-nio-8080-exec-3] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:17:04:348 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:17:04:350 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 15:17:04:353 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: 1(Integer), 6(Integer), 3(Integer)
2019-01-09 15:17:04:412 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 2
2019-01-09 15:17:04:420 [http-nio-8080-exec-3] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:17:04:421 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:17:04:422 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 15:17:04:423 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: 1(Integer)
2019-01-09 15:17:04:474 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 15:17:04:673 [http-nio-8080-exec-2] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:17:04:674 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:17:04:675 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 15:17:04:676 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: 1(Integer), 9(Integer), 3(Integer)
2019-01-09 15:17:04:722 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 0
2019-01-09 15:17:04:724 [http-nio-8080-exec-2] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:17:04:724 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:17:04:725 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 15:17:04:725 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: 1(Integer)
2019-01-09 15:17:04:770 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 15:17:04:975 [http-nio-8080-exec-8] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:17:04:976 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:17:04:977 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 15:17:04:978 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: 1(Integer), 12(Integer), 3(Integer)
2019-01-09 15:17:05:033 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 0
2019-01-09 15:17:05:035 [http-nio-8080-exec-8] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:17:05:036 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:17:05:037 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 15:17:05:038 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: 1(Integer)
2019-01-09 15:17:05:091 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 15:17:16:150 [http-nio-8080-exec-1] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.LocalAuthDao.queryLocalByUserNameAndPwd] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:17:16:150 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:17:16:150 [http-nio-8080-exec-1] DEBUG c.c.s.dao.LocalAuthDao.queryLocalByUserNameAndPwd - ==>  Preparing: select la.local_auth_id, la.username, la.password, la.create_time as la_create_time, la.last_edit_time as la_last_edit_time, la.person_info, pi.user_id, pi.name, pi.email, pi.gender, pi.enable_status, pi.user_type, pi.create_time as pi_create_time, pi.last_edit_time as pi_last_edit_time from tb_local_auth as la left join tb_person_info as pi on la.person_info = pi.user_id where la.username=? and la.password=? 
2019-01-09 15:17:16:151 [http-nio-8080-exec-1] DEBUG c.c.s.dao.LocalAuthDao.queryLocalByUserNameAndPwd - ==> Parameters: admin(String), 50565y5q2b92b9b2265q2b5s2b550ye6(String)
2019-01-09 15:17:16:205 [http-nio-8080-exec-1] DEBUG c.c.s.dao.LocalAuthDao.queryLocalByUserNameAndPwd - <==      Total: 1
2019-01-09 15:17:20:546 [http-nio-8080-exec-9] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.PersonInfoDao.queryPersonInfoByUserId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:17:20:546 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:17:20:547 [http-nio-8080-exec-9] DEBUG c.c.s.dao.PersonInfoDao.queryPersonInfoByUserId - ==>  Preparing: select * from tb_person_info where user_id=? 
2019-01-09 15:17:20:547 [http-nio-8080-exec-9] DEBUG c.c.s.dao.PersonInfoDao.queryPersonInfoByUserId - ==> Parameters: 1(Long)
2019-01-09 15:17:20:551 [http-nio-8080-exec-7] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopByOwnerId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:17:20:551 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:17:20:551 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopByOwnerId - ==>  Preparing: select tb_shop.shop_id, tb_shop.owner_id, tb_person_info.name, tb_shop.area_id, tb_area.area_name, tb_shop.shop_category_id, tb_shop_category.shop_category_name, tb_shop.shop_name, tb_shop.shop_desc, tb_shop.shop_addr, tb_shop.phone, tb_shop.shop_img, tb_shop.priority, tb_shop.create_time, tb_shop.last_edit_time, tb_shop.enable_status, tb_shop.advice from tb_shop, tb_area, tb_person_info, tb_shop_category where tb_shop.owner_id=? 
2019-01-09 15:17:20:552 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopByOwnerId - ==> Parameters: 1(Long)
2019-01-09 15:17:20:598 [http-nio-8080-exec-9] DEBUG c.c.s.dao.PersonInfoDao.queryPersonInfoByUserId - <==      Total: 1
2019-01-09 15:17:27:474 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopByOwnerId - <==      Total: 4158
2019-01-09 15:17:31:989 [http-nio-8080-exec-6] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShop] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:17:31:989 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:17:31:989 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - ==>  Preparing: select tb_shop.shop_id, tb_shop.owner_id, tb_person_info.name, tb_shop.area_id, tb_area.area_name, tb_shop.shop_category_id, tb_shop_category.shop_category_name, tb_shop.shop_name, tb_shop.shop_desc, tb_shop.shop_addr, tb_shop.phone, tb_shop.shop_img, tb_shop.priority, tb_shop.create_time, tb_shop.last_edit_time, tb_shop.enable_status, tb_shop.advice from tb_shop, tb_area, tb_person_info, tb_shop_category where tb_shop.shop_id=? 
2019-01-09 15:17:31:989 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - ==> Parameters: 9(Long)
2019-01-09 15:17:32:433 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - <==      Total: 378
2019-01-09 15:17:34:866 [http-nio-8080-exec-3] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShop] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:17:34:866 [http-nio-8080-exec-7] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductListByShopId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:17:34:866 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:17:34:866 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:17:34:866 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - ==>  Preparing: select tb_shop.shop_id, tb_shop.owner_id, tb_person_info.name, tb_shop.area_id, tb_area.area_name, tb_shop.shop_category_id, tb_shop_category.shop_category_name, tb_shop.shop_name, tb_shop.shop_desc, tb_shop.shop_addr, tb_shop.phone, tb_shop.shop_img, tb_shop.priority, tb_shop.create_time, tb_shop.last_edit_time, tb_shop.enable_status, tb_shop.advice from tb_shop, tb_area, tb_person_info, tb_shop_category where tb_shop.shop_id=? 
2019-01-09 15:17:34:866 [http-nio-8080-exec-7] DEBUG c.c.ssmshop.dao.ProductDao.getProductListByShopId - ==>  Preparing: SELECT tp.product_id, tp.product_name, tp.product_desc, tp.img_addr, tp.normal_price, tp.promotion_price, tp.priority, tp.create_time, tp.last_edit_time, tp.enable_status, tp.product_category_id, tp.shop_id, tpc.product_category_name, tpc.priority, tpc.create_time, tpc.last_edit_time, ts.shop_name, ts.shop_desc, ts.shop_addr, ts.phone, ts.shop_img, ts.priority, ts.create_time, ts.last_edit_time, ts.enable_status, ts.advice FROM tb_product AS tp, tb_product_category AS tpc, tb_shop AS ts WHERE tp.shop_id=? ORDER BY tp.priority DESC 
2019-01-09 15:17:34:867 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - ==> Parameters: 9(Long)
2019-01-09 15:17:34:867 [http-nio-8080-exec-7] DEBUG c.c.ssmshop.dao.ProductDao.getProductListByShopId - ==> Parameters: 9(Long)
2019-01-09 15:17:35:196 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - <==      Total: 378
2019-01-09 15:17:35:735 [http-nio-8080-exec-7] DEBUG c.c.ssmshop.dao.ProductDao.getProductListByShopId - <==      Total: 264
2019-01-09 15:26:37:040 [main] DEBUG com.chq.ssmshop.SSMshopApplication - Running with Spring Boot v2.1.1.RELEASE, Spring v5.1.3.RELEASE
2019-01-09 15:26:58:587 [http-nio-8080-exec-8] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.LocalAuthDao.queryLocalByUserNameAndPwd] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:26:58:588 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:26:59:460 [http-nio-8080-exec-8] DEBUG c.c.s.dao.LocalAuthDao.queryLocalByUserNameAndPwd - ==>  Preparing: select la.local_auth_id, la.username, la.password, la.create_time as la_create_time, la.last_edit_time as la_last_edit_time, la.person_info, pi.user_id, pi.name, pi.email, pi.gender, pi.enable_status, pi.user_type, pi.create_time as pi_create_time, pi.last_edit_time as pi_last_edit_time from tb_local_auth as la left join tb_person_info as pi on la.person_info = pi.user_id where la.username=? and la.password=? 
2019-01-09 15:26:59:496 [http-nio-8080-exec-8] DEBUG c.c.s.dao.LocalAuthDao.queryLocalByUserNameAndPwd - ==> Parameters: admin(String), 50565y5q2b92b9b2265q2b5s2b550ye6(String)
2019-01-09 15:26:59:585 [http-nio-8080-exec-8] DEBUG c.c.s.dao.LocalAuthDao.queryLocalByUserNameAndPwd - <==      Total: 1
2019-01-09 15:27:02:770 [http-nio-8080-exec-8] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.PersonInfoDao.queryPersonInfoByUserId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:27:02:771 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:27:02:771 [http-nio-8080-exec-8] DEBUG c.c.s.dao.PersonInfoDao.queryPersonInfoByUserId - ==>  Preparing: select * from tb_person_info where user_id=? 
2019-01-09 15:27:02:771 [http-nio-8080-exec-8] DEBUG c.c.s.dao.PersonInfoDao.queryPersonInfoByUserId - ==> Parameters: 1(Long)
2019-01-09 15:27:02:774 [http-nio-8080-exec-5] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopByOwnerId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:27:02:774 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:27:02:775 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopByOwnerId - ==>  Preparing: select tb_shop.shop_id, tb_shop.owner_id, tb_person_info.name, tb_shop.area_id, tb_area.area_name, tb_shop.shop_category_id, tb_shop_category.shop_category_name, tb_shop.shop_name, tb_shop.shop_desc, tb_shop.shop_addr, tb_shop.phone, tb_shop.shop_img, tb_shop.priority, tb_shop.create_time, tb_shop.last_edit_time, tb_shop.enable_status, tb_shop.advice from tb_shop, tb_area, tb_person_info, tb_shop_category where tb_shop.owner_id=? 
2019-01-09 15:27:02:775 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopByOwnerId - ==> Parameters: 1(Long)
2019-01-09 15:27:02:850 [http-nio-8080-exec-8] DEBUG c.c.s.dao.PersonInfoDao.queryPersonInfoByUserId - <==      Total: 1
2019-01-09 15:27:09:808 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopByOwnerId - <==      Total: 4158
2019-01-09 15:27:25:768 [http-nio-8080-exec-10] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShop] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:27:25:768 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:27:25:768 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - ==>  Preparing: select tb_shop.shop_id, tb_shop.owner_id, tb_person_info.name, tb_shop.area_id, tb_area.area_name, tb_shop.shop_category_id, tb_shop_category.shop_category_name, tb_shop.shop_name, tb_shop.shop_desc, tb_shop.shop_addr, tb_shop.phone, tb_shop.shop_img, tb_shop.priority, tb_shop.create_time, tb_shop.last_edit_time, tb_shop.enable_status, tb_shop.advice from tb_shop, tb_area, tb_person_info, tb_shop_category where tb_shop.shop_id=? 
2019-01-09 15:27:25:768 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - ==> Parameters: 9(Long)
2019-01-09 15:27:26:309 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - <==      Total: 378
2019-01-09 15:27:27:196 [http-nio-8080-exec-1] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShop] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:27:27:196 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:27:27:197 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - ==>  Preparing: select tb_shop.shop_id, tb_shop.owner_id, tb_person_info.name, tb_shop.area_id, tb_area.area_name, tb_shop.shop_category_id, tb_shop_category.shop_category_name, tb_shop.shop_name, tb_shop.shop_desc, tb_shop.shop_addr, tb_shop.phone, tb_shop.shop_img, tb_shop.priority, tb_shop.create_time, tb_shop.last_edit_time, tb_shop.enable_status, tb_shop.advice from tb_shop, tb_area, tb_person_info, tb_shop_category where tb_shop.shop_id=? 
2019-01-09 15:27:27:197 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - ==> Parameters: 9(Long)
2019-01-09 15:27:27:198 [http-nio-8080-exec-5] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductListByShopId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:27:27:198 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:27:27:199 [http-nio-8080-exec-5] DEBUG c.c.ssmshop.dao.ProductDao.getProductListByShopId - ==>  Preparing: SELECT tp.product_id, tp.product_name, tp.product_desc, tp.img_addr, tp.normal_price, tp.promotion_price, tp.priority, tp.create_time, tp.last_edit_time, tp.enable_status, tp.product_category_id, tp.shop_id, tpc.product_category_name, tpc.priority, tpc.create_time, tpc.last_edit_time, ts.shop_name, ts.shop_desc, ts.shop_addr, ts.phone, ts.shop_img, ts.priority, ts.create_time, ts.last_edit_time, ts.enable_status, ts.advice FROM tb_product AS tp, tb_product_category AS tpc, tb_shop AS ts WHERE tp.shop_id=? ORDER BY tp.priority DESC 
2019-01-09 15:27:27:199 [http-nio-8080-exec-5] DEBUG c.c.ssmshop.dao.ProductDao.getProductListByShopId - ==> Parameters: 9(Long)
2019-01-09 15:27:27:834 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - <==      Total: 378
2019-01-09 15:27:28:073 [http-nio-8080-exec-5] DEBUG c.c.ssmshop.dao.ProductDao.getProductListByShopId - <==      Total: 264
2019-01-09 15:30:59:117 [http-nio-8080-exec-10] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductListByShopId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:30:59:117 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:30:59:117 [http-nio-8080-exec-10] DEBUG c.c.ssmshop.dao.ProductDao.getProductListByShopId - ==>  Preparing: SELECT tp.product_id, tp.product_name, tp.product_desc, tp.img_addr, tp.normal_price, tp.promotion_price, tp.priority, tp.create_time, tp.last_edit_time, tp.enable_status, tp.product_category_id, tp.shop_id, tpc.product_category_name, tpc.priority, tpc.create_time, tpc.last_edit_time, ts.shop_name, ts.shop_desc, ts.shop_addr, ts.phone, ts.shop_img, ts.priority, ts.create_time, ts.last_edit_time, ts.enable_status, ts.advice FROM tb_product AS tp, tb_product_category AS tpc, tb_shop AS ts WHERE tp.shop_id=? ORDER BY tp.priority DESC 
2019-01-09 15:30:59:117 [http-nio-8080-exec-10] DEBUG c.c.ssmshop.dao.ProductDao.getProductListByShopId - ==> Parameters: 9(Long)
2019-01-09 15:30:59:119 [http-nio-8080-exec-9] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShop] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:30:59:119 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:30:59:119 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - ==>  Preparing: select tb_shop.shop_id, tb_shop.owner_id, tb_person_info.name, tb_shop.area_id, tb_area.area_name, tb_shop.shop_category_id, tb_shop_category.shop_category_name, tb_shop.shop_name, tb_shop.shop_desc, tb_shop.shop_addr, tb_shop.phone, tb_shop.shop_img, tb_shop.priority, tb_shop.create_time, tb_shop.last_edit_time, tb_shop.enable_status, tb_shop.advice from tb_shop, tb_area, tb_person_info, tb_shop_category where tb_shop.shop_id=? 
2019-01-09 15:30:59:119 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - ==> Parameters: 9(Long)
2019-01-09 15:30:59:451 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - <==      Total: 378
2019-01-09 15:30:59:960 [http-nio-8080-exec-10] DEBUG c.c.ssmshop.dao.ProductDao.getProductListByShopId - <==      Total: 264
2019-01-09 15:31:36:884 [http-nio-8080-exec-3] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductListByShopId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:31:36:884 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:31:36:884 [http-nio-8080-exec-3] DEBUG c.c.ssmshop.dao.ProductDao.getProductListByShopId - ==>  Preparing: SELECT tp.product_id, tp.product_name, tp.product_desc, tp.img_addr, tp.normal_price, tp.promotion_price, tp.priority, tp.create_time, tp.last_edit_time, tp.enable_status, tp.product_category_id, tp.shop_id, tpc.product_category_name, tpc.priority, tpc.create_time, tpc.last_edit_time, ts.shop_name, ts.shop_desc, ts.shop_addr, ts.phone, ts.shop_img, ts.priority, ts.create_time, ts.last_edit_time, ts.enable_status, ts.advice FROM tb_product AS tp, tb_product_category AS tpc, tb_shop AS ts WHERE tp.shop_id=? ORDER BY tp.priority DESC 
2019-01-09 15:31:36:884 [http-nio-8080-exec-3] DEBUG c.c.ssmshop.dao.ProductDao.getProductListByShopId - ==> Parameters: 9(Long)
2019-01-09 15:31:36:888 [http-nio-8080-exec-6] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShop] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:31:36:888 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:31:36:888 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - ==>  Preparing: select tb_shop.shop_id, tb_shop.owner_id, tb_person_info.name, tb_shop.area_id, tb_area.area_name, tb_shop.shop_category_id, tb_shop_category.shop_category_name, tb_shop.shop_name, tb_shop.shop_desc, tb_shop.shop_addr, tb_shop.phone, tb_shop.shop_img, tb_shop.priority, tb_shop.create_time, tb_shop.last_edit_time, tb_shop.enable_status, tb_shop.advice from tb_shop, tb_area, tb_person_info, tb_shop_category where tb_shop.shop_id=? 
2019-01-09 15:31:36:889 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - ==> Parameters: 9(Long)
2019-01-09 15:31:38:006 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - <==      Total: 378
2019-01-09 15:31:38:116 [http-nio-8080-exec-3] DEBUG c.c.ssmshop.dao.ProductDao.getProductListByShopId - <==      Total: 264
2019-01-09 15:31:40:778 [http-nio-8080-exec-8] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductListByShopId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:31:40:779 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:31:40:779 [http-nio-8080-exec-8] DEBUG c.c.ssmshop.dao.ProductDao.getProductListByShopId - ==>  Preparing: SELECT tp.product_id, tp.product_name, tp.product_desc, tp.img_addr, tp.normal_price, tp.promotion_price, tp.priority, tp.create_time, tp.last_edit_time, tp.enable_status, tp.product_category_id, tp.shop_id, tpc.product_category_name, tpc.priority, tpc.create_time, tpc.last_edit_time, ts.shop_name, ts.shop_desc, ts.shop_addr, ts.phone, ts.shop_img, ts.priority, ts.create_time, ts.last_edit_time, ts.enable_status, ts.advice FROM tb_product AS tp, tb_product_category AS tpc, tb_shop AS ts WHERE tp.shop_id=? ORDER BY tp.priority DESC 
2019-01-09 15:31:40:779 [http-nio-8080-exec-8] DEBUG c.c.ssmshop.dao.ProductDao.getProductListByShopId - ==> Parameters: 9(Long)
2019-01-09 15:31:40:780 [http-nio-8080-exec-7] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShop] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:31:40:780 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:31:40:780 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - ==>  Preparing: select tb_shop.shop_id, tb_shop.owner_id, tb_person_info.name, tb_shop.area_id, tb_area.area_name, tb_shop.shop_category_id, tb_shop_category.shop_category_name, tb_shop.shop_name, tb_shop.shop_desc, tb_shop.shop_addr, tb_shop.phone, tb_shop.shop_img, tb_shop.priority, tb_shop.create_time, tb_shop.last_edit_time, tb_shop.enable_status, tb_shop.advice from tb_shop, tb_area, tb_person_info, tb_shop_category where tb_shop.shop_id=? 
2019-01-09 15:31:40:780 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - ==> Parameters: 9(Long)
2019-01-09 15:31:41:340 [http-nio-8080-exec-8] DEBUG c.c.ssmshop.dao.ProductDao.getProductListByShopId - <==      Total: 264
2019-01-09 15:31:41:603 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - <==      Total: 378
2019-01-09 15:31:44:544 [http-nio-8080-exec-10] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductListByShopId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:31:44:544 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:31:44:544 [http-nio-8080-exec-10] DEBUG c.c.ssmshop.dao.ProductDao.getProductListByShopId - ==>  Preparing: SELECT tp.product_id, tp.product_name, tp.product_desc, tp.img_addr, tp.normal_price, tp.promotion_price, tp.priority, tp.create_time, tp.last_edit_time, tp.enable_status, tp.product_category_id, tp.shop_id, tpc.product_category_name, tpc.priority, tpc.create_time, tpc.last_edit_time, ts.shop_name, ts.shop_desc, ts.shop_addr, ts.phone, ts.shop_img, ts.priority, ts.create_time, ts.last_edit_time, ts.enable_status, ts.advice FROM tb_product AS tp, tb_product_category AS tpc, tb_shop AS ts WHERE tp.shop_id=? ORDER BY tp.priority DESC 
2019-01-09 15:31:44:544 [http-nio-8080-exec-4] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShop] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:31:44:544 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:31:44:544 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - ==>  Preparing: select tb_shop.shop_id, tb_shop.owner_id, tb_person_info.name, tb_shop.area_id, tb_area.area_name, tb_shop.shop_category_id, tb_shop_category.shop_category_name, tb_shop.shop_name, tb_shop.shop_desc, tb_shop.shop_addr, tb_shop.phone, tb_shop.shop_img, tb_shop.priority, tb_shop.create_time, tb_shop.last_edit_time, tb_shop.enable_status, tb_shop.advice from tb_shop, tb_area, tb_person_info, tb_shop_category where tb_shop.shop_id=? 
2019-01-09 15:31:44:544 [http-nio-8080-exec-10] DEBUG c.c.ssmshop.dao.ProductDao.getProductListByShopId - ==> Parameters: 9(Long)
2019-01-09 15:31:44:544 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - ==> Parameters: 9(Long)
2019-01-09 15:31:44:872 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - <==      Total: 378
2019-01-09 15:31:45:386 [http-nio-8080-exec-10] DEBUG c.c.ssmshop.dao.ProductDao.getProductListByShopId - <==      Total: 264
2019-01-09 15:32:02:968 [http-nio-8080-exec-9] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductListByShopId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:32:02:968 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:32:02:968 [http-nio-8080-exec-9] DEBUG c.c.ssmshop.dao.ProductDao.getProductListByShopId - ==>  Preparing: SELECT tp.product_id, tp.product_name, tp.product_desc, tp.img_addr, tp.normal_price, tp.promotion_price, tp.priority, tp.create_time, tp.last_edit_time, tp.enable_status, tp.product_category_id, tp.shop_id, tpc.product_category_name, tpc.priority, tpc.create_time, tpc.last_edit_time, ts.shop_name, ts.shop_desc, ts.shop_addr, ts.phone, ts.shop_img, ts.priority, ts.create_time, ts.last_edit_time, ts.enable_status, ts.advice FROM tb_product AS tp, tb_product_category AS tpc, tb_shop AS ts WHERE tp.shop_id=? ORDER BY tp.priority DESC 
2019-01-09 15:32:02:969 [http-nio-8080-exec-9] DEBUG c.c.ssmshop.dao.ProductDao.getProductListByShopId - ==> Parameters: 9(Long)
2019-01-09 15:32:02:973 [http-nio-8080-exec-2] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShop] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:32:02:973 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:32:02:973 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - ==>  Preparing: select tb_shop.shop_id, tb_shop.owner_id, tb_person_info.name, tb_shop.area_id, tb_area.area_name, tb_shop.shop_category_id, tb_shop_category.shop_category_name, tb_shop.shop_name, tb_shop.shop_desc, tb_shop.shop_addr, tb_shop.phone, tb_shop.shop_img, tb_shop.priority, tb_shop.create_time, tb_shop.last_edit_time, tb_shop.enable_status, tb_shop.advice from tb_shop, tb_area, tb_person_info, tb_shop_category where tb_shop.shop_id=? 
2019-01-09 15:32:02:974 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - ==> Parameters: 9(Long)
2019-01-09 15:32:03:291 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - <==      Total: 378
2019-01-09 15:32:03:895 [http-nio-8080-exec-9] DEBUG c.c.ssmshop.dao.ProductDao.getProductListByShopId - <==      Total: 264
2019-01-09 15:38:01:707 [http-nio-8080-exec-6] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductListByShopId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:38:01:708 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:38:01:708 [http-nio-8080-exec-6] DEBUG c.c.ssmshop.dao.ProductDao.getProductListByShopId - ==>  Preparing: SELECT tp.product_id, tp.product_name, tp.product_desc, tp.img_addr, tp.normal_price, tp.promotion_price, tp.priority, tp.create_time, tp.last_edit_time, tp.enable_status, tp.product_category_id, tp.shop_id, tpc.product_category_name, tpc.priority, tpc.create_time, tpc.last_edit_time, ts.shop_name, ts.shop_desc, ts.shop_addr, ts.phone, ts.shop_img, ts.priority, ts.create_time, ts.last_edit_time, ts.enable_status, ts.advice FROM tb_product AS tp, tb_product_category AS tpc, tb_shop AS ts WHERE tp.shop_id=? ORDER BY tp.priority DESC 
2019-01-09 15:38:01:708 [http-nio-8080-exec-6] DEBUG c.c.ssmshop.dao.ProductDao.getProductListByShopId - ==> Parameters: 9(Long)
2019-01-09 15:38:01:711 [http-nio-8080-exec-2] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShop] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:38:01:711 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:38:01:711 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - ==>  Preparing: select tb_shop.shop_id, tb_shop.owner_id, tb_person_info.name, tb_shop.area_id, tb_area.area_name, tb_shop.shop_category_id, tb_shop_category.shop_category_name, tb_shop.shop_name, tb_shop.shop_desc, tb_shop.shop_addr, tb_shop.phone, tb_shop.shop_img, tb_shop.priority, tb_shop.create_time, tb_shop.last_edit_time, tb_shop.enable_status, tb_shop.advice from tb_shop, tb_area, tb_person_info, tb_shop_category where tb_shop.shop_id=? 
2019-01-09 15:38:01:711 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - ==> Parameters: 9(Long)
2019-01-09 15:38:02:000 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - <==      Total: 378
2019-01-09 15:38:02:253 [http-nio-8080-exec-6] DEBUG c.c.ssmshop.dao.ProductDao.getProductListByShopId - <==      Total: 264
2019-01-09 15:38:09:918 [http-nio-8080-exec-7] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:38:09:918 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:38:09:918 [http-nio-8080-exec-7] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr as pm_img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id = pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2019-01-09 15:38:09:918 [http-nio-8080-exec-7] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 10(Long)
2019-01-09 15:38:09:971 [http-nio-8080-exec-7] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - <==      Total: 1
2019-01-09 15:38:19:689 [http-nio-8080-exec-8] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductListByShopId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:38:19:689 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:38:19:689 [http-nio-8080-exec-8] DEBUG c.c.ssmshop.dao.ProductDao.getProductListByShopId - ==>  Preparing: SELECT tp.product_id, tp.product_name, tp.product_desc, tp.img_addr, tp.normal_price, tp.promotion_price, tp.priority, tp.create_time, tp.last_edit_time, tp.enable_status, tp.product_category_id, tp.shop_id, tpc.product_category_name, tpc.priority, tpc.create_time, tpc.last_edit_time, ts.shop_name, ts.shop_desc, ts.shop_addr, ts.phone, ts.shop_img, ts.priority, ts.create_time, ts.last_edit_time, ts.enable_status, ts.advice FROM tb_product AS tp, tb_product_category AS tpc, tb_shop AS ts WHERE tp.shop_id=? ORDER BY tp.priority DESC 
2019-01-09 15:38:19:689 [http-nio-8080-exec-8] DEBUG c.c.ssmshop.dao.ProductDao.getProductListByShopId - ==> Parameters: 9(Long)
2019-01-09 15:38:19:690 [http-nio-8080-exec-5] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShop] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:38:19:691 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:38:19:691 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - ==>  Preparing: select tb_shop.shop_id, tb_shop.owner_id, tb_person_info.name, tb_shop.area_id, tb_area.area_name, tb_shop.shop_category_id, tb_shop_category.shop_category_name, tb_shop.shop_name, tb_shop.shop_desc, tb_shop.shop_addr, tb_shop.phone, tb_shop.shop_img, tb_shop.priority, tb_shop.create_time, tb_shop.last_edit_time, tb_shop.enable_status, tb_shop.advice from tb_shop, tb_area, tb_person_info, tb_shop_category where tb_shop.shop_id=? 
2019-01-09 15:38:19:691 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - ==> Parameters: 9(Long)
2019-01-09 15:38:19:970 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - <==      Total: 378
2019-01-09 15:38:20:275 [http-nio-8080-exec-8] DEBUG c.c.ssmshop.dao.ProductDao.getProductListByShopId - <==      Total: 264
2019-01-09 15:38:30:322 [http-nio-8080-exec-4] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:38:30:322 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:38:30:322 [http-nio-8080-exec-4] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr as pm_img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id = pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2019-01-09 15:38:30:322 [http-nio-8080-exec-4] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 5(Long)
2019-01-09 15:38:30:378 [http-nio-8080-exec-4] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - <==      Total: 2
2019-01-09 15:38:37:707 [http-nio-8080-exec-3] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductListByShopId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:38:37:707 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:38:37:708 [http-nio-8080-exec-3] DEBUG c.c.ssmshop.dao.ProductDao.getProductListByShopId - ==>  Preparing: SELECT tp.product_id, tp.product_name, tp.product_desc, tp.img_addr, tp.normal_price, tp.promotion_price, tp.priority, tp.create_time, tp.last_edit_time, tp.enable_status, tp.product_category_id, tp.shop_id, tpc.product_category_name, tpc.priority, tpc.create_time, tpc.last_edit_time, ts.shop_name, ts.shop_desc, ts.shop_addr, ts.phone, ts.shop_img, ts.priority, ts.create_time, ts.last_edit_time, ts.enable_status, ts.advice FROM tb_product AS tp, tb_product_category AS tpc, tb_shop AS ts WHERE tp.shop_id=? ORDER BY tp.priority DESC 
2019-01-09 15:38:37:708 [http-nio-8080-exec-3] DEBUG c.c.ssmshop.dao.ProductDao.getProductListByShopId - ==> Parameters: 9(Long)
2019-01-09 15:38:37:709 [http-nio-8080-exec-9] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShop] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:38:37:709 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:38:37:709 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - ==>  Preparing: select tb_shop.shop_id, tb_shop.owner_id, tb_person_info.name, tb_shop.area_id, tb_area.area_name, tb_shop.shop_category_id, tb_shop_category.shop_category_name, tb_shop.shop_name, tb_shop.shop_desc, tb_shop.shop_addr, tb_shop.phone, tb_shop.shop_img, tb_shop.priority, tb_shop.create_time, tb_shop.last_edit_time, tb_shop.enable_status, tb_shop.advice from tb_shop, tb_area, tb_person_info, tb_shop_category where tb_shop.shop_id=? 
2019-01-09 15:38:37:710 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - ==> Parameters: 9(Long)
2019-01-09 15:38:37:977 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - <==      Total: 378
2019-01-09 15:38:38:293 [http-nio-8080-exec-3] DEBUG c.c.ssmshop.dao.ProductDao.getProductListByShopId - <==      Total: 264
2019-01-09 15:48:47:621 [http-nio-8080-exec-2] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:48:47:622 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:48:47:623 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 15:48:47:624 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: 1(Integer), 0(Integer), 3(Integer)
2019-01-09 15:48:47:686 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 3
2019-01-09 15:48:47:686 [http-nio-8080-exec-2] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:48:47:687 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:48:47:687 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 15:48:47:688 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: 1(Integer)
2019-01-09 15:48:47:736 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 15:48:48:902 [http-nio-8080-exec-4] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:48:48:902 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:48:48:903 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 15:48:48:904 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: 1(Integer), 3(Integer), 3(Integer)
2019-01-09 15:48:48:960 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 3
2019-01-09 15:48:48:963 [http-nio-8080-exec-4] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:48:48:963 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:48:48:964 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 15:48:48:965 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: 1(Integer)
2019-01-09 15:48:49:013 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 15:48:50:762 [http-nio-8080-exec-4] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShop] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:48:50:762 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:48:50:762 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - ==>  Preparing: select tb_shop.shop_id, tb_shop.owner_id, tb_person_info.name, tb_shop.area_id, tb_area.area_name, tb_shop.shop_category_id, tb_shop_category.shop_category_name, tb_shop.shop_name, tb_shop.shop_desc, tb_shop.shop_addr, tb_shop.phone, tb_shop.shop_img, tb_shop.priority, tb_shop.create_time, tb_shop.last_edit_time, tb_shop.enable_status, tb_shop.advice from tb_shop, tb_area, tb_person_info, tb_shop_category where tb_shop.shop_id=? 
2019-01-09 15:48:50:763 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - ==> Parameters: 9(Long)
2019-01-09 15:48:50:769 [http-nio-8080-exec-7] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:48:50:769 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:48:50:770 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE shop_id = ? and enable_status = ? ORDER BY priority DESC LIMIT ?,?; 
2019-01-09 15:48:50:770 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==> Parameters: 9(Integer), 1(Integer), 0(Integer), 10(Integer)
2019-01-09 15:48:50:823 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - <==      Total: 3
2019-01-09 15:48:50:824 [http-nio-8080-exec-7] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:48:50:824 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:48:50:824 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==>  Preparing: SELECT count(1) FROM tb_product WHERE shop_id = ? and enable_status = ? 
2019-01-09 15:48:50:825 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==> Parameters: 9(Integer), 1(Integer)
2019-01-09 15:48:50:878 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - <==      Total: 1
2019-01-09 15:48:51:087 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - <==      Total: 378
2019-01-09 15:48:51:089 [http-nio-8080-exec-4] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductCategoryDao.getProductCategoryListByShopId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:48:51:089 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:48:51:090 [http-nio-8080-exec-4] DEBUG c.c.s.d.P.getProductCategoryListByShopId - ==>  Preparing: select tpc.product_category_id, tpc.product_category_name, tpc.priority, tpc.create_time, tpc.last_edit_time, tpc.shop_id, ts.shop_name from tb_shop as ts, tb_product_category as tpc where tpc.shop_id=? order by tpc.priority 
2019-01-09 15:48:51:090 [http-nio-8080-exec-4] DEBUG c.c.s.d.P.getProductCategoryListByShopId - ==> Parameters: 9(Long)
2019-01-09 15:48:51:139 [http-nio-8080-exec-4] DEBUG c.c.s.d.P.getProductCategoryListByShopId - <==      Total: 33
2019-01-09 15:48:52:151 [http-nio-8080-exec-3] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:48:52:151 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:48:52:152 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE shop_id = ? and enable_status = ? ORDER BY priority DESC LIMIT ?,?; 
2019-01-09 15:48:52:154 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==> Parameters: 9(Integer), 1(Integer), 10(Integer), 10(Integer)
2019-01-09 15:48:52:214 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - <==      Total: 0
2019-01-09 15:48:52:216 [http-nio-8080-exec-3] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:48:52:216 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:48:52:217 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==>  Preparing: SELECT count(1) FROM tb_product WHERE shop_id = ? and enable_status = ? 
2019-01-09 15:48:52:217 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==> Parameters: 9(Integer), 1(Integer)
2019-01-09 15:48:52:265 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - <==      Total: 1
2019-01-09 15:48:53:643 [http-nio-8080-exec-10] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:48:53:644 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:48:53:644 [http-nio-8080-exec-10] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr as pm_img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id = pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2019-01-09 15:48:53:644 [http-nio-8080-exec-10] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 5(Long)
2019-01-09 15:48:53:695 [http-nio-8080-exec-10] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - <==      Total: 2
2019-01-09 15:48:56:978 [http-nio-8080-exec-10] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShop] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:48:56:978 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:48:56:978 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - ==>  Preparing: select tb_shop.shop_id, tb_shop.owner_id, tb_person_info.name, tb_shop.area_id, tb_area.area_name, tb_shop.shop_category_id, tb_shop_category.shop_category_name, tb_shop.shop_name, tb_shop.shop_desc, tb_shop.shop_addr, tb_shop.phone, tb_shop.shop_img, tb_shop.priority, tb_shop.create_time, tb_shop.last_edit_time, tb_shop.enable_status, tb_shop.advice from tb_shop, tb_area, tb_person_info, tb_shop_category where tb_shop.shop_id=? 
2019-01-09 15:48:56:978 [http-nio-8080-exec-4] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:48:56:979 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:48:56:979 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - ==> Parameters: 9(Long)
2019-01-09 15:48:56:979 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE shop_id = ? and enable_status = ? ORDER BY priority DESC LIMIT ?,?; 
2019-01-09 15:48:56:979 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==> Parameters: 9(Integer), 1(Integer), 0(Integer), 10(Integer)
2019-01-09 15:48:57:061 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - <==      Total: 3
2019-01-09 15:48:57:062 [http-nio-8080-exec-4] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:48:57:062 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:48:57:062 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==>  Preparing: SELECT count(1) FROM tb_product WHERE shop_id = ? and enable_status = ? 
2019-01-09 15:48:57:063 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==> Parameters: 9(Integer), 1(Integer)
2019-01-09 15:48:57:111 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - <==      Total: 1
2019-01-09 15:48:57:256 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - <==      Total: 378
2019-01-09 15:48:57:256 [http-nio-8080-exec-10] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductCategoryDao.getProductCategoryListByShopId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:48:57:257 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:48:57:257 [http-nio-8080-exec-10] DEBUG c.c.s.d.P.getProductCategoryListByShopId - ==>  Preparing: select tpc.product_category_id, tpc.product_category_name, tpc.priority, tpc.create_time, tpc.last_edit_time, tpc.shop_id, ts.shop_name from tb_shop as ts, tb_product_category as tpc where tpc.shop_id=? order by tpc.priority 
2019-01-09 15:48:57:257 [http-nio-8080-exec-10] DEBUG c.c.s.d.P.getProductCategoryListByShopId - ==> Parameters: 9(Long)
2019-01-09 15:48:57:316 [http-nio-8080-exec-10] DEBUG c.c.s.d.P.getProductCategoryListByShopId - <==      Total: 33
2019-01-09 15:48:58:201 [http-nio-8080-exec-2] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:48:58:201 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:48:58:202 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE shop_id = ? and enable_status = ? ORDER BY priority DESC LIMIT ?,?; 
2019-01-09 15:48:58:203 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==> Parameters: 9(Integer), 1(Integer), 10(Integer), 10(Integer)
2019-01-09 15:48:58:263 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - <==      Total: 0
2019-01-09 15:48:58:264 [http-nio-8080-exec-2] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:48:58:265 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:48:58:265 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==>  Preparing: SELECT count(1) FROM tb_product WHERE shop_id = ? and enable_status = ? 
2019-01-09 15:48:58:266 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==> Parameters: 9(Integer), 1(Integer)
2019-01-09 15:48:58:319 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - <==      Total: 1
2019-01-09 15:48:59:082 [http-nio-8080-exec-1] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:48:59:082 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:48:59:082 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE shop_id = ? and enable_status = ? ORDER BY priority DESC LIMIT ?,?; 
2019-01-09 15:48:59:083 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==> Parameters: 9(Integer), 1(Integer), 20(Integer), 10(Integer)
2019-01-09 15:48:59:134 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - <==      Total: 0
2019-01-09 15:48:59:136 [http-nio-8080-exec-1] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:48:59:136 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:48:59:137 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==>  Preparing: SELECT count(1) FROM tb_product WHERE shop_id = ? and enable_status = ? 
2019-01-09 15:48:59:138 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==> Parameters: 9(Integer), 1(Integer)
2019-01-09 15:48:59:192 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - <==      Total: 1
2019-01-09 15:49:00:872 [http-nio-8080-exec-8] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:49:00:872 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:49:00:873 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 15:49:00:873 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: 1(Integer), 0(Integer), 3(Integer)
2019-01-09 15:49:00:926 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 3
2019-01-09 15:49:00:927 [http-nio-8080-exec-8] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:49:00:927 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:49:00:927 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 15:49:00:927 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: 1(Integer)
2019-01-09 15:49:00:974 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 15:49:21:146 [http-nio-8080-exec-8] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:49:21:146 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:49:21:146 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 15:49:21:146 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: 1(Integer), 0(Integer), 3(Integer)
2019-01-09 15:49:21:200 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 3
2019-01-09 15:49:21:201 [http-nio-8080-exec-8] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:49:21:201 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:49:21:202 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 15:49:21:202 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: 1(Integer)
2019-01-09 15:49:21:256 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 15:49:23:050 [http-nio-8080-exec-10] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:49:23:051 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:49:23:052 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 15:49:23:052 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: 1(Integer), 3(Integer), 3(Integer)
2019-01-09 15:49:23:099 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 3
2019-01-09 15:49:23:100 [http-nio-8080-exec-10] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:49:23:101 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:49:23:101 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 15:49:23:102 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: 1(Integer)
2019-01-09 15:49:23:155 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 15:49:24:723 [http-nio-8080-exec-10] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShop] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:49:24:723 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:49:24:723 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - ==>  Preparing: select tb_shop.shop_id, tb_shop.owner_id, tb_person_info.name, tb_shop.area_id, tb_area.area_name, tb_shop.shop_category_id, tb_shop_category.shop_category_name, tb_shop.shop_name, tb_shop.shop_desc, tb_shop.shop_addr, tb_shop.phone, tb_shop.shop_img, tb_shop.priority, tb_shop.create_time, tb_shop.last_edit_time, tb_shop.enable_status, tb_shop.advice from tb_shop, tb_area, tb_person_info, tb_shop_category where tb_shop.shop_id=? 
2019-01-09 15:49:24:723 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - ==> Parameters: 9(Long)
2019-01-09 15:49:24:723 [http-nio-8080-exec-2] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:49:24:723 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:49:24:724 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE shop_id = ? and enable_status = ? ORDER BY priority DESC LIMIT ?,?; 
2019-01-09 15:49:24:724 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==> Parameters: 9(Integer), 1(Integer), 0(Integer), 10(Integer)
2019-01-09 15:49:24:792 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - <==      Total: 3
2019-01-09 15:49:24:793 [http-nio-8080-exec-2] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:49:24:793 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:49:24:793 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==>  Preparing: SELECT count(1) FROM tb_product WHERE shop_id = ? and enable_status = ? 
2019-01-09 15:49:24:793 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==> Parameters: 9(Integer), 1(Integer)
2019-01-09 15:49:24:852 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - <==      Total: 1
2019-01-09 15:49:24:943 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - <==      Total: 378
2019-01-09 15:49:24:944 [http-nio-8080-exec-10] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductCategoryDao.getProductCategoryListByShopId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:49:24:944 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:49:24:944 [http-nio-8080-exec-10] DEBUG c.c.s.d.P.getProductCategoryListByShopId - ==>  Preparing: select tpc.product_category_id, tpc.product_category_name, tpc.priority, tpc.create_time, tpc.last_edit_time, tpc.shop_id, ts.shop_name from tb_shop as ts, tb_product_category as tpc where tpc.shop_id=? order by tpc.priority 
2019-01-09 15:49:24:944 [http-nio-8080-exec-10] DEBUG c.c.s.d.P.getProductCategoryListByShopId - ==> Parameters: 9(Long)
2019-01-09 15:49:24:992 [http-nio-8080-exec-10] DEBUG c.c.s.d.P.getProductCategoryListByShopId - <==      Total: 33
2019-01-09 15:49:27:500 [http-nio-8080-exec-9] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:49:27:500 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:49:27:501 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE shop_id = ? and enable_status = ? ORDER BY priority DESC LIMIT ?,?; 
2019-01-09 15:49:27:502 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==> Parameters: 9(Integer), 1(Integer), 10(Integer), 10(Integer)
2019-01-09 15:49:27:556 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - <==      Total: 0
2019-01-09 15:49:27:557 [http-nio-8080-exec-9] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:49:27:557 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:49:27:558 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==>  Preparing: SELECT count(1) FROM tb_product WHERE shop_id = ? and enable_status = ? 
2019-01-09 15:49:27:559 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==> Parameters: 9(Integer), 1(Integer)
2019-01-09 15:49:27:612 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - <==      Total: 1
2019-01-09 15:49:27:629 [http-nio-8080-exec-5] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:49:27:629 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:49:27:630 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE shop_id = ? and enable_status = ? ORDER BY priority DESC LIMIT ?,?; 
2019-01-09 15:49:27:631 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==> Parameters: 9(Integer), 1(Integer), 20(Integer), 10(Integer)
2019-01-09 15:49:27:685 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - <==      Total: 0
2019-01-09 15:49:27:686 [http-nio-8080-exec-5] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:49:27:687 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:49:27:687 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==>  Preparing: SELECT count(1) FROM tb_product WHERE shop_id = ? and enable_status = ? 
2019-01-09 15:49:27:688 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==> Parameters: 9(Integer), 1(Integer)
2019-01-09 15:49:27:733 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - <==      Total: 1
2019-01-09 15:49:27:991 [http-nio-8080-exec-6] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:49:27:991 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:49:27:994 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE shop_id = ? and enable_status = ? ORDER BY priority DESC LIMIT ?,?; 
2019-01-09 15:49:27:994 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==> Parameters: 9(Integer), 1(Integer), 30(Integer), 10(Integer)
2019-01-09 15:49:28:045 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - <==      Total: 0
2019-01-09 15:49:28:046 [http-nio-8080-exec-6] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:49:28:046 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:49:28:047 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==>  Preparing: SELECT count(1) FROM tb_product WHERE shop_id = ? and enable_status = ? 
2019-01-09 15:49:28:047 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==> Parameters: 9(Integer), 1(Integer)
2019-01-09 15:49:28:102 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - <==      Total: 1
2019-01-09 15:49:34:117 [http-nio-8080-exec-4] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:49:34:118 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:49:34:118 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE shop_id = ? and enable_status = ? ORDER BY priority DESC LIMIT ?,?; 
2019-01-09 15:49:34:120 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==> Parameters: 9(Integer), 1(Integer), 40(Integer), 10(Integer)
2019-01-09 15:49:34:168 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - <==      Total: 0
2019-01-09 15:49:34:170 [http-nio-8080-exec-4] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:49:34:170 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:49:34:171 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==>  Preparing: SELECT count(1) FROM tb_product WHERE shop_id = ? and enable_status = ? 
2019-01-09 15:49:34:172 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==> Parameters: 9(Integer), 1(Integer)
2019-01-09 15:49:34:221 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - <==      Total: 1
2019-01-09 15:49:40:996 [http-nio-8080-exec-2] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:49:40:996 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:49:40:997 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE shop_id = ? and product_name like '%insert%' and enable_status = ? ORDER BY priority DESC LIMIT ?,?; 
2019-01-09 15:49:40:998 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==> Parameters: 9(Integer), 1(Integer), 0(Integer), 10(Integer)
2019-01-09 15:49:41:067 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - <==      Total: 1
2019-01-09 15:49:41:068 [http-nio-8080-exec-2] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:49:41:068 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:49:41:069 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==>  Preparing: SELECT count(1) FROM tb_product WHERE shop_id = ? and product_name like '%insert%' and enable_status = ? 
2019-01-09 15:49:41:070 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==> Parameters: 9(Integer), 1(Integer)
2019-01-09 15:49:41:119 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - <==      Total: 1
2019-01-09 15:49:42:157 [http-nio-8080-exec-7] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:49:42:157 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:49:42:157 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE shop_id = ? and product_name like '%insert%' and enable_status = ? ORDER BY priority DESC LIMIT ?,?; 
2019-01-09 15:49:42:158 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==> Parameters: 9(Integer), 1(Integer), 10(Integer), 10(Integer)
2019-01-09 15:49:42:204 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - <==      Total: 0
2019-01-09 15:49:42:205 [http-nio-8080-exec-7] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:49:42:205 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:49:42:205 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==>  Preparing: SELECT count(1) FROM tb_product WHERE shop_id = ? and product_name like '%insert%' and enable_status = ? 
2019-01-09 15:49:42:205 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==> Parameters: 9(Integer), 1(Integer)
2019-01-09 15:49:42:258 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - <==      Total: 1
2019-01-09 15:49:42:280 [http-nio-8080-exec-3] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:49:42:281 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:49:42:281 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE shop_id = ? and product_name like '%insert%' and enable_status = ? ORDER BY priority DESC LIMIT ?,?; 
2019-01-09 15:49:42:282 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==> Parameters: 9(Integer), 1(Integer), 20(Integer), 10(Integer)
2019-01-09 15:49:42:330 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - <==      Total: 0
2019-01-09 15:49:42:331 [http-nio-8080-exec-3] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:49:42:331 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:49:42:332 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==>  Preparing: SELECT count(1) FROM tb_product WHERE shop_id = ? and product_name like '%insert%' and enable_status = ? 
2019-01-09 15:49:42:332 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==> Parameters: 9(Integer), 1(Integer)
2019-01-09 15:49:42:386 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - <==      Total: 1
2019-01-09 15:49:43:745 [http-nio-8080-exec-2] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.getProductByProductId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:49:43:745 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:49:43:745 [http-nio-8080-exec-2] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr as pm_img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id = pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2019-01-09 15:49:43:746 [http-nio-8080-exec-2] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - ==> Parameters: 3(Long)
2019-01-09 15:49:43:803 [http-nio-8080-exec-2] DEBUG c.chq.ssmshop.dao.ProductDao.getProductByProductId - <==      Total: 1
2019-01-09 15:49:46:923 [http-nio-8080-exec-6] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShop] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:49:46:923 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:49:46:923 [http-nio-8080-exec-2] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:49:46:923 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:49:46:923 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - ==>  Preparing: select tb_shop.shop_id, tb_shop.owner_id, tb_person_info.name, tb_shop.area_id, tb_area.area_name, tb_shop.shop_category_id, tb_shop_category.shop_category_name, tb_shop.shop_name, tb_shop.shop_desc, tb_shop.shop_addr, tb_shop.phone, tb_shop.shop_img, tb_shop.priority, tb_shop.create_time, tb_shop.last_edit_time, tb_shop.enable_status, tb_shop.advice from tb_shop, tb_area, tb_person_info, tb_shop_category where tb_shop.shop_id=? 
2019-01-09 15:49:46:923 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE shop_id = ? and enable_status = ? ORDER BY priority DESC LIMIT ?,?; 
2019-01-09 15:49:46:923 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - ==> Parameters: 9(Long)
2019-01-09 15:49:46:923 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==> Parameters: 9(Integer), 1(Integer), 0(Integer), 10(Integer)
2019-01-09 15:49:46:982 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - <==      Total: 3
2019-01-09 15:49:46:983 [http-nio-8080-exec-2] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:49:46:983 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:49:46:983 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==>  Preparing: SELECT count(1) FROM tb_product WHERE shop_id = ? and enable_status = ? 
2019-01-09 15:49:46:983 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==> Parameters: 9(Integer), 1(Integer)
2019-01-09 15:49:47:049 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - <==      Total: 1
2019-01-09 15:49:47:146 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ShopDao.queryShop - <==      Total: 378
2019-01-09 15:49:47:147 [http-nio-8080-exec-6] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductCategoryDao.getProductCategoryListByShopId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:49:47:147 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:49:47:147 [http-nio-8080-exec-6] DEBUG c.c.s.d.P.getProductCategoryListByShopId - ==>  Preparing: select tpc.product_category_id, tpc.product_category_name, tpc.priority, tpc.create_time, tpc.last_edit_time, tpc.shop_id, ts.shop_name from tb_shop as ts, tb_product_category as tpc where tpc.shop_id=? order by tpc.priority 
2019-01-09 15:49:47:147 [http-nio-8080-exec-6] DEBUG c.c.s.d.P.getProductCategoryListByShopId - ==> Parameters: 9(Long)
2019-01-09 15:49:47:204 [http-nio-8080-exec-6] DEBUG c.c.s.d.P.getProductCategoryListByShopId - <==      Total: 33
2019-01-09 15:49:52:989 [http-nio-8080-exec-9] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:49:52:989 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:49:52:990 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE shop_id = ? and product_name like '%注册%' and enable_status = ? ORDER BY priority DESC LIMIT ?,?; 
2019-01-09 15:49:52:990 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==> Parameters: 9(Integer), 1(Integer), 0(Integer), 10(Integer)
2019-01-09 15:49:53:036 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - <==      Total: 2
2019-01-09 15:49:53:038 [http-nio-8080-exec-9] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:49:53:038 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:49:53:038 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==>  Preparing: SELECT count(1) FROM tb_product WHERE shop_id = ? and product_name like '%注册%' and enable_status = ? 
2019-01-09 15:49:53:039 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==> Parameters: 9(Integer), 1(Integer)
2019-01-09 15:49:53:091 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - <==      Total: 1
2019-01-09 15:49:54:333 [http-nio-8080-exec-5] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:49:54:333 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:49:54:334 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE shop_id = ? and product_name like '%注册%' and enable_status = ? ORDER BY priority DESC LIMIT ?,?; 
2019-01-09 15:49:54:335 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==> Parameters: 9(Integer), 1(Integer), 10(Integer), 10(Integer)
2019-01-09 15:49:54:389 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - <==      Total: 0
2019-01-09 15:49:54:390 [http-nio-8080-exec-5] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:49:54:391 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:49:54:391 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==>  Preparing: SELECT count(1) FROM tb_product WHERE shop_id = ? and product_name like '%注册%' and enable_status = ? 
2019-01-09 15:49:54:392 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==> Parameters: 9(Integer), 1(Integer)
2019-01-09 15:49:54:438 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - <==      Total: 1
2019-01-09 15:49:55:415 [http-nio-8080-exec-4] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:49:55:415 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:49:55:416 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE shop_id = ? and product_name like '%注册%' and enable_status = ? ORDER BY priority DESC LIMIT ?,?; 
2019-01-09 15:49:55:417 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==> Parameters: 9(Integer), 1(Integer), 20(Integer), 10(Integer)
2019-01-09 15:49:55:462 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - <==      Total: 0
2019-01-09 15:49:55:463 [http-nio-8080-exec-4] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:49:55:463 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:49:55:463 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==>  Preparing: SELECT count(1) FROM tb_product WHERE shop_id = ? and product_name like '%注册%' and enable_status = ? 
2019-01-09 15:49:55:464 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==> Parameters: 9(Integer), 1(Integer)
2019-01-09 15:49:55:519 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - <==      Total: 1
2019-01-09 15:49:55:914 [http-nio-8080-exec-2] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:49:55:915 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:49:55:915 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE shop_id = ? and product_name like '%注册%' and enable_status = ? ORDER BY priority DESC LIMIT ?,?; 
2019-01-09 15:49:55:915 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==> Parameters: 9(Integer), 1(Integer), 30(Integer), 10(Integer)
2019-01-09 15:49:55:988 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - <==      Total: 0
2019-01-09 15:49:55:989 [http-nio-8080-exec-2] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:49:55:989 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:49:55:989 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==>  Preparing: SELECT count(1) FROM tb_product WHERE shop_id = ? and product_name like '%注册%' and enable_status = ? 
2019-01-09 15:49:55:990 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==> Parameters: 9(Integer), 1(Integer)
2019-01-09 15:49:56:040 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - <==      Total: 1
2019-01-09 15:50:00:385 [http-nio-8080-exec-1] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:00:385 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:00:386 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE shop_id = ? and enable_status = ? ORDER BY priority DESC LIMIT ?,?; 
2019-01-09 15:50:00:386 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==> Parameters: 9(Integer), 1(Integer), 0(Integer), 10(Integer)
2019-01-09 15:50:00:433 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - <==      Total: 3
2019-01-09 15:50:00:433 [http-nio-8080-exec-1] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:00:434 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:00:434 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==>  Preparing: SELECT count(1) FROM tb_product WHERE shop_id = ? and enable_status = ? 
2019-01-09 15:50:00:434 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==> Parameters: 9(Integer), 1(Integer)
2019-01-09 15:50:00:487 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - <==      Total: 1
2019-01-09 15:50:01:561 [http-nio-8080-exec-3] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:01:562 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:01:562 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE shop_id = ? and enable_status = ? ORDER BY priority DESC LIMIT ?,?; 
2019-01-09 15:50:01:563 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==> Parameters: 9(Integer), 1(Integer), 10(Integer), 10(Integer)
2019-01-09 15:50:01:622 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - <==      Total: 0
2019-01-09 15:50:01:622 [http-nio-8080-exec-3] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:01:622 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:01:622 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==>  Preparing: SELECT count(1) FROM tb_product WHERE shop_id = ? and enable_status = ? 
2019-01-09 15:50:01:623 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==> Parameters: 9(Integer), 1(Integer)
2019-01-09 15:50:01:671 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - <==      Total: 1
2019-01-09 15:50:03:485 [http-nio-8080-exec-6] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:03:485 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:03:485 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE shop_id = ? and enable_status = ? ORDER BY priority DESC LIMIT ?,?; 
2019-01-09 15:50:03:485 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==> Parameters: 9(Integer), 1(Integer), 20(Integer), 10(Integer)
2019-01-09 15:50:03:534 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - <==      Total: 0
2019-01-09 15:50:03:535 [http-nio-8080-exec-6] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:03:535 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:03:536 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==>  Preparing: SELECT count(1) FROM tb_product WHERE shop_id = ? and enable_status = ? 
2019-01-09 15:50:03:537 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==> Parameters: 9(Integer), 1(Integer)
2019-01-09 15:50:03:593 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - <==      Total: 1
2019-01-09 15:50:04:999 [http-nio-8080-exec-10] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:04:999 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:04:999 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE shop_id = ? and enable_status = ? ORDER BY priority DESC LIMIT ?,?; 
2019-01-09 15:50:05:000 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==> Parameters: 9(Integer), 1(Integer), 30(Integer), 10(Integer)
2019-01-09 15:50:05:046 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - <==      Total: 0
2019-01-09 15:50:05:047 [http-nio-8080-exec-10] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:05:047 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:05:047 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==>  Preparing: SELECT count(1) FROM tb_product WHERE shop_id = ? and enable_status = ? 
2019-01-09 15:50:05:048 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==> Parameters: 9(Integer), 1(Integer)
2019-01-09 15:50:05:101 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - <==      Total: 1
2019-01-09 15:50:05:264 [http-nio-8080-exec-8] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:05:264 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:05:265 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE shop_id = ? and enable_status = ? ORDER BY priority DESC LIMIT ?,?; 
2019-01-09 15:50:05:265 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==> Parameters: 9(Integer), 1(Integer), 40(Integer), 10(Integer)
2019-01-09 15:50:05:320 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - <==      Total: 0
2019-01-09 15:50:05:321 [http-nio-8080-exec-8] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:05:321 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:05:322 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==>  Preparing: SELECT count(1) FROM tb_product WHERE shop_id = ? and enable_status = ? 
2019-01-09 15:50:05:322 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==> Parameters: 9(Integer), 1(Integer)
2019-01-09 15:50:05:376 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - <==      Total: 1
2019-01-09 15:50:05:395 [http-nio-8080-exec-9] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:05:396 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:05:396 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE shop_id = ? and enable_status = ? ORDER BY priority DESC LIMIT ?,?; 
2019-01-09 15:50:05:396 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==> Parameters: 9(Integer), 1(Integer), 50(Integer), 10(Integer)
2019-01-09 15:50:05:449 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - <==      Total: 0
2019-01-09 15:50:05:450 [http-nio-8080-exec-9] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:05:450 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:05:451 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==>  Preparing: SELECT count(1) FROM tb_product WHERE shop_id = ? and enable_status = ? 
2019-01-09 15:50:05:452 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==> Parameters: 9(Integer), 1(Integer)
2019-01-09 15:50:05:498 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - <==      Total: 1
2019-01-09 15:50:05:715 [http-nio-8080-exec-5] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:05:716 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:05:716 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE shop_id = ? and enable_status = ? ORDER BY priority DESC LIMIT ?,?; 
2019-01-09 15:50:05:717 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - ==> Parameters: 9(Integer), 1(Integer), 60(Integer), 10(Integer)
2019-01-09 15:50:05:766 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductList - <==      Total: 0
2019-01-09 15:50:05:768 [http-nio-8080-exec-5] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ProductDao.queryProductCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:05:768 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:05:768 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==>  Preparing: SELECT count(1) FROM tb_product WHERE shop_id = ? and enable_status = ? 
2019-01-09 15:50:05:769 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - ==> Parameters: 9(Integer), 1(Integer)
2019-01-09 15:50:05:819 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ProductDao.queryProductCount - <==      Total: 1
2019-01-09 15:50:07:068 [http-nio-8080-exec-8] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:07:068 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:07:068 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 15:50:07:069 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: 1(Integer), 0(Integer), 3(Integer)
2019-01-09 15:50:07:117 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 3
2019-01-09 15:50:07:118 [http-nio-8080-exec-8] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:07:118 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:07:118 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 15:50:07:118 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: 1(Integer)
2019-01-09 15:50:07:161 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 15:50:08:334 [http-nio-8080-exec-2] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:08:334 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:08:335 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 15:50:08:335 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: 1(Integer), 3(Integer), 3(Integer)
2019-01-09 15:50:08:384 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 3
2019-01-09 15:50:08:385 [http-nio-8080-exec-2] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:08:385 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:08:386 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 15:50:08:386 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: 1(Integer)
2019-01-09 15:50:08:428 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 15:50:11:595 [http-nio-8080-exec-1] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:11:595 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:11:595 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 15:50:11:596 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: d(String), 1(Integer), 0(Integer), 3(Integer)
2019-01-09 15:50:11:672 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 0
2019-01-09 15:50:11:673 [http-nio-8080-exec-1] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:11:673 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:11:674 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 15:50:11:674 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: d(String), 1(Integer)
2019-01-09 15:50:11:723 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 15:50:12:212 [http-nio-8080-exec-8] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:12:212 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:12:213 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 15:50:12:214 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: 1(Integer), 0(Integer), 3(Integer)
2019-01-09 15:50:12:262 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 3
2019-01-09 15:50:12:263 [http-nio-8080-exec-8] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:12:263 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:12:263 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 15:50:12:264 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: 1(Integer)
2019-01-09 15:50:12:315 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 15:50:12:867 [http-nio-8080-exec-9] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:12:867 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:12:867 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 15:50:12:867 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: d(String), 1(Integer), 0(Integer), 3(Integer)
2019-01-09 15:50:12:914 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 0
2019-01-09 15:50:12:915 [http-nio-8080-exec-9] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:12:915 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:12:916 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 15:50:12:916 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: d(String), 1(Integer)
2019-01-09 15:50:12:963 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 15:50:12:983 [http-nio-8080-exec-5] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:12:983 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:12:983 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 15:50:12:984 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: di(String), 1(Integer), 0(Integer), 3(Integer)
2019-01-09 15:50:13:038 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 0
2019-01-09 15:50:13:039 [http-nio-8080-exec-5] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:13:039 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:13:040 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 15:50:13:040 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: di(String), 1(Integer)
2019-01-09 15:50:13:055 [http-nio-8080-exec-4] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:13:056 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:13:056 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 15:50:13:057 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: dia(String), 1(Integer), 0(Integer), 3(Integer)
2019-01-09 15:50:13:082 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 15:50:13:106 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 0
2019-01-09 15:50:13:107 [http-nio-8080-exec-4] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:13:107 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:13:108 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 15:50:13:108 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: dia(String), 1(Integer)
2019-01-09 15:50:13:109 [http-nio-8080-exec-10] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:13:109 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:13:110 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 15:50:13:110 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: dian(String), 1(Integer), 0(Integer), 3(Integer)
2019-01-09 15:50:13:158 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 0
2019-01-09 15:50:13:159 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 15:50:13:160 [http-nio-8080-exec-10] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:13:160 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:13:160 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 15:50:13:161 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: dian(String), 1(Integer)
2019-01-09 15:50:13:208 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 15:50:13:286 [http-nio-8080-exec-2] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:13:286 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:13:287 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 15:50:13:288 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: dianp(String), 1(Integer), 0(Integer), 3(Integer)
2019-01-09 15:50:13:335 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 0
2019-01-09 15:50:13:336 [http-nio-8080-exec-2] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:13:336 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:13:336 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 15:50:13:337 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: dianp(String), 1(Integer)
2019-01-09 15:50:13:385 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 15:50:13:411 [http-nio-8080-exec-7] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:13:411 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:13:412 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 15:50:13:412 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: dianpu(String), 1(Integer), 0(Integer), 3(Integer)
2019-01-09 15:50:13:459 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 0
2019-01-09 15:50:13:460 [http-nio-8080-exec-7] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:13:460 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:13:460 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 15:50:13:461 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: dianpu(String), 1(Integer)
2019-01-09 15:50:13:515 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 15:50:13:652 [http-nio-8080-exec-6] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:13:653 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:13:653 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 15:50:13:654 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: 店铺(String), 1(Integer), 0(Integer), 3(Integer)
2019-01-09 15:50:13:705 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 3
2019-01-09 15:50:13:706 [http-nio-8080-exec-6] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:13:706 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:13:707 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 15:50:13:707 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: 店铺(String), 1(Integer)
2019-01-09 15:50:13:762 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 15:50:15:449 [http-nio-8080-exec-1] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:15:449 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:15:449 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 15:50:15:450 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: 店铺(String), 1(Integer), 3(Integer), 3(Integer)
2019-01-09 15:50:15:501 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 0
2019-01-09 15:50:15:502 [http-nio-8080-exec-1] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:15:502 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:15:503 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 15:50:15:503 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: 店铺(String), 1(Integer)
2019-01-09 15:50:15:558 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 15:50:15:577 [http-nio-8080-exec-8] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:15:578 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:15:578 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 15:50:15:578 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: 店铺(String), 1(Integer), 6(Integer), 3(Integer)
2019-01-09 15:50:15:629 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 0
2019-01-09 15:50:15:630 [http-nio-8080-exec-8] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:15:631 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:15:631 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 15:50:15:631 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: 店铺(String), 1(Integer)
2019-01-09 15:50:15:692 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 15:50:16:865 [http-nio-8080-exec-9] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:16:865 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:16:865 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 15:50:16:866 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: 店铺(String), 1(Integer), 9(Integer), 3(Integer)
2019-01-09 15:50:16:913 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 0
2019-01-09 15:50:16:914 [http-nio-8080-exec-9] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:16:914 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:16:914 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 15:50:16:915 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: 店铺(String), 1(Integer)
2019-01-09 15:50:16:966 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 15:50:16:990 [http-nio-8080-exec-5] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:16:990 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:16:990 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 15:50:16:991 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: 店铺(String), 1(Integer), 12(Integer), 3(Integer)
2019-01-09 15:50:17:048 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 0
2019-01-09 15:50:17:049 [http-nio-8080-exec-5] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:17:049 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:17:049 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 15:50:17:050 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: 店铺(String), 1(Integer)
2019-01-09 15:50:17:105 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 15:50:17:126 [http-nio-8080-exec-4] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:17:126 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:17:127 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 15:50:17:127 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: 店铺(String), 1(Integer), 15(Integer), 3(Integer)
2019-01-09 15:50:17:172 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 0
2019-01-09 15:50:17:173 [http-nio-8080-exec-4] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:17:173 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:17:174 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 15:50:17:174 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: 店铺(String), 1(Integer)
2019-01-09 15:50:17:222 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 15:50:18:673 [http-nio-8080-exec-10] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:18:674 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:18:674 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 15:50:18:675 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: 店(String), 1(Integer), 0(Integer), 3(Integer)
2019-01-09 15:50:18:727 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 3
2019-01-09 15:50:18:728 [http-nio-8080-exec-10] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:18:729 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:18:729 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 15:50:18:730 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: 店(String), 1(Integer)
2019-01-09 15:50:18:788 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 15:50:18:829 [http-nio-8080-exec-2] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:18:829 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:18:829 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 15:50:18:830 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: 1(Integer), 0(Integer), 3(Integer)
2019-01-09 15:50:18:879 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 3
2019-01-09 15:50:18:880 [http-nio-8080-exec-2] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:18:880 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:18:880 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 15:50:18:881 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: 1(Integer)
2019-01-09 15:50:18:931 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 15:50:20:681 [http-nio-8080-exec-6] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:20:682 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:20:682 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 15:50:20:682 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: 1(Integer), 3(Integer), 3(Integer)
2019-01-09 15:50:20:732 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 3
2019-01-09 15:50:20:733 [http-nio-8080-exec-6] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:20:733 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:20:733 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 15:50:20:733 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: 1(Integer)
2019-01-09 15:50:20:782 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 15:50:21:764 [http-nio-8080-exec-9] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:21:764 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:21:765 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 15:50:21:765 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: 1(Integer), 6(Integer), 3(Integer)
2019-01-09 15:50:21:817 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 2
2019-01-09 15:50:21:819 [http-nio-8080-exec-9] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:21:819 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:21:820 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 15:50:21:821 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: 1(Integer)
2019-01-09 15:50:21:871 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 15:50:22:164 [http-nio-8080-exec-4] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:22:164 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:22:165 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 15:50:22:165 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: 1(Integer), 9(Integer), 3(Integer)
2019-01-09 15:50:22:207 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 0
2019-01-09 15:50:22:209 [http-nio-8080-exec-4] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:22:209 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:22:210 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 15:50:22:210 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: 1(Integer)
2019-01-09 15:50:22:255 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 15:50:24:885 [http-nio-8080-exec-10] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:24:885 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:24:889 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 15:50:24:890 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: 1(Integer), 12(Integer), 3(Integer)
2019-01-09 15:50:24:938 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 0
2019-01-09 15:50:24:939 [http-nio-8080-exec-10] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:24:939 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:24:939 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 15:50:24:940 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: 1(Integer)
2019-01-09 15:50:24:982 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 15:50:24:994 [http-nio-8080-exec-2] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:24:995 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:24:995 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 15:50:24:995 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: 1(Integer), 15(Integer), 3(Integer)
2019-01-09 15:50:25:046 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 0
2019-01-09 15:50:25:047 [http-nio-8080-exec-2] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:25:047 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:25:048 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 15:50:25:048 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: 1(Integer)
2019-01-09 15:50:25:092 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 15:50:29:019 [http-nio-8080-exec-7] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:29:019 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:29:020 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 15:50:29:020 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: c(String), 1(Integer), 0(Integer), 3(Integer)
2019-01-09 15:50:29:072 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 1
2019-01-09 15:50:29:073 [http-nio-8080-exec-7] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:29:073 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:29:073 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 15:50:29:073 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: c(String), 1(Integer)
2019-01-09 15:50:29:123 [http-nio-8080-exec-7] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 15:50:29:241 [http-nio-8080-exec-6] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:29:241 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:29:241 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 15:50:29:242 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: ce(String), 1(Integer), 0(Integer), 3(Integer)
2019-01-09 15:50:29:287 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 0
2019-01-09 15:50:29:288 [http-nio-8080-exec-6] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:29:288 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:29:289 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 15:50:29:289 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: ce(String), 1(Integer)
2019-01-09 15:50:29:339 [http-nio-8080-exec-6] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 15:50:29:804 [http-nio-8080-exec-3] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:29:804 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:29:805 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 15:50:29:805 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: ces(String), 1(Integer), 0(Integer), 3(Integer)
2019-01-09 15:50:29:857 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 0
2019-01-09 15:50:29:858 [http-nio-8080-exec-3] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:29:858 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:29:858 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 15:50:29:859 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: ces(String), 1(Integer)
2019-01-09 15:50:29:902 [http-nio-8080-exec-3] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 15:50:29:917 [http-nio-8080-exec-1] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:29:917 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:29:918 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 15:50:29:918 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: cesh(String), 1(Integer), 0(Integer), 3(Integer)
2019-01-09 15:50:29:927 [http-nio-8080-exec-8] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:29:927 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:29:927 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 15:50:29:927 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: ceshi(String), 1(Integer), 0(Integer), 3(Integer)
2019-01-09 15:50:29:972 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 0
2019-01-09 15:50:29:973 [http-nio-8080-exec-1] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:29:973 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:29:973 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 15:50:29:974 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: cesh(String), 1(Integer)
2019-01-09 15:50:29:986 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 0
2019-01-09 15:50:29:987 [http-nio-8080-exec-8] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:29:987 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:29:987 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 15:50:29:988 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: ceshi(String), 1(Integer)
2019-01-09 15:50:30:027 [http-nio-8080-exec-1] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 15:50:30:036 [http-nio-8080-exec-8] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 15:50:30:203 [http-nio-8080-exec-9] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:30:203 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:30:204 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 15:50:30:204 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: 测试(String), 1(Integer), 0(Integer), 3(Integer)
2019-01-09 15:50:30:251 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 3
2019-01-09 15:50:30:251 [http-nio-8080-exec-9] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:30:252 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:30:252 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 15:50:30:252 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: 测试(String), 1(Integer)
2019-01-09 15:50:30:303 [http-nio-8080-exec-9] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 15:50:31:367 [http-nio-8080-exec-5] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:31:367 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:31:367 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 15:50:31:368 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: 测试(String), 1(Integer), 3(Integer), 3(Integer)
2019-01-09 15:50:31:421 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 1
2019-01-09 15:50:31:422 [http-nio-8080-exec-5] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:31:422 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:31:422 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 15:50:31:422 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: 测试(String), 1(Integer)
2019-01-09 15:50:31:468 [http-nio-8080-exec-5] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 15:50:31:947 [http-nio-8080-exec-4] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:31:947 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:31:948 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 15:50:31:948 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: 测试(String), 1(Integer), 6(Integer), 3(Integer)
2019-01-09 15:50:32:015 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 0
2019-01-09 15:50:32:016 [http-nio-8080-exec-4] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:32:016 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:32:016 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 15:50:32:017 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: 测试(String), 1(Integer)
2019-01-09 15:50:32:069 [http-nio-8080-exec-4] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 15:50:32:733 [http-nio-8080-exec-10] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:32:733 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:32:734 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 15:50:32:734 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: 测试(String), 1(Integer), 9(Integer), 3(Integer)
2019-01-09 15:50:32:785 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 0
2019-01-09 15:50:32:786 [http-nio-8080-exec-10] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:32:786 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:32:786 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 15:50:32:787 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: 测试(String), 1(Integer)
2019-01-09 15:50:32:840 [http-nio-8080-exec-10] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
2019-01-09 15:50:32:860 [http-nio-8080-exec-2] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:32:860 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:32:861 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,? 
2019-01-09 15:50:32:861 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - ==> Parameters: 测试(String), 1(Integer), 12(Integer), 3(Integer)
2019-01-09 15:50:32:917 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopList - <==      Total: 0
2019-01-09 15:50:32:917 [http-nio-8080-exec-2] DEBUG c.c.ssmshop.dao.split.DynamicDataSourceInterceptor - 设置方法[com.chq.ssmshop.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-01-09 15:50:32:917 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.split.DynamicDataSourceHolder - 所使用的数据源时：slave
2019-01-09 15:50:32:917 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_name like concat('%',?,'%') AND s.enable_status = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-01-09 15:50:32:918 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - ==> Parameters: 测试(String), 1(Integer)
2019-01-09 15:50:33:045 [http-nio-8080-exec-2] DEBUG com.chq.ssmshop.dao.ShopDao.queryShopCount - <==      Total: 1
