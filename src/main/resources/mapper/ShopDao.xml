<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chq.ssmshop.dao.ShopDao">
	<insert id="insertShop"
		parameterType="com.chq.ssmshop.entity.Shop" useGeneratedKeys="true"
		keyColumn="shop_id" keyProperty="shopId">
		insert into tb_shop(
		owner_id,area_id,shop_category_id,shop_name,shop_desc,shop_addr,phone,
		shop_img,priority,create_time,last_edit_time,enable_status,advice
		)
		values(
		#{owner.userId},#{area.areaId},#{shopCategory.shopCategoryId},#{shopName},#{shopDesc},#{shopAddr},#{phone},
		#{shopImg},#{priority},#{createTime},#{lastEditTime},#{enableStatus},#{advice}
		)
	</insert>

	<update id="updateShop"
		parameterType="com.chq.ssmshop.entity.Shop">
		update tb_shop
		<set>
			<if test="area!=null">area_id=#{area.areaId},</if>
			<if test="shopCategory!=null">shop_category_id=#{shopCategory.shopCategoryId},</if>
			<if test="shopName!=null">shop_name=#{shopName},</if>
			<if test="shopDesc!=null">shop_desc=#{shopDesc},</if>
			<if test="shopAddr!=null">shop_addr=#{shopAddr},</if>
			<if test="phone!=null">phone=#{phone},</if>
			<if test="shopImg!=null">shop_img=#{shopImg},</if>
			<if test="priority!=null">priority=#{priority},</if>
			<if test="lastEditTime!=null">last_edit_time=#{lastEditTime}</if>
		</set>
		where shop_id=#{shopId}
	</update>

	<select id="queryAllShop" resultMap="shopMap">
		select
		tb_shop.shop_id,
		tb_shop.owner_id,
		tb_person_info.name,
		tb_shop.area_id,
		tb_area.area_name,
		tb_shop.shop_category_id,
		tb_shop_category.shop_category_name,
		tb_shop.shop_name,
		tb_shop.shop_desc,
		tb_shop.shop_addr,
		tb_shop.phone,
		tb_shop.shop_img,
		tb_shop.priority,
		tb_shop.create_time,
		tb_shop.last_edit_time,
		tb_shop.enable_status,
		tb_shop.advice
		from
		tb_shop,
		tb_area,
		tb_person_info,
		tb_shop_category
		order by
		priority desc
	</select>

	<!-- resultMap中的元素必须严格按照id result associatoin collection的顺序来排列 -->
	<resultMap type="com.chq.ssmshop.entity.Shop" id="shopMap">
		<id column="shop_id" property="shopId" />
		<result column="shop_name" property="shopName" />
		<result column="shop_desc" property="shopDesc" />
		<result column="shop_addr" property="shopAddr" />
		<result column="phone" property="phone" />
		<result column="shop_img" property="shopImg" />
		<result column="priority" property="priority" />
		<result column="create_time" property="createTime" />
		<result column="last_edit_time" property="lastEditTime" />
		<result column="enable_status" property="enableStatus" />
		<result column="advice" property="advice" />
		<!-- association专门负责一对一级联 collection负责一对多级联 -->
		<association column="owner_id" property="owner"
			javaType="com.chq.ssmshop.entity.PersonInfo">
			<id column="owner_id" property="userId" />
			<result column="name" property="name" />
		</association>
		<association column="area_id" property="area"
			javaType="com.chq.ssmshop.entity.Area">
			<id column="area_id" property="areaId" />
			<result column="area_name" property="areaName" />
		</association>
		<association column="shop_category_id"
			property="shopCategory"
			javaType="com.chq.ssmshop.entity.ShopCategory">
			<id column="shop_category_id" property="shopCategoryId" />
			<result column="shop_category_name"
				property="shopCategoryName" />
		</association>
	</resultMap>

	<select id="queryShop" parameterType="Long" resultMap="shopMap">
		select
		tb_shop.shop_id,
		tb_shop.owner_id,
		tb_person_info.name,
		tb_shop.area_id,
		tb_area.area_name,
		tb_shop.shop_category_id,
		tb_shop_category.shop_category_name,
		tb_shop.shop_name,
		tb_shop.shop_desc,
		tb_shop.shop_addr,
		tb_shop.phone,
		tb_shop.shop_img,
		tb_shop.priority,
		tb_shop.create_time,
		tb_shop.last_edit_time,
		tb_shop.enable_status,
		tb_shop.advice
		from
		tb_shop,
		tb_area,
		tb_person_info,
		tb_shop_category
		where
		tb_shop.shop_id=#{shopId}
	</select>

	<select id="queryShopByOwnerId" parameterType="Long"
		resultMap="shopMap">
		select
		tb_shop.shop_id,
		tb_shop.owner_id,
		tb_person_info.name,
		tb_shop.area_id,
		tb_area.area_name,
		tb_shop.shop_category_id,
		tb_shop_category.shop_category_name,
		tb_shop.shop_name,
		tb_shop.shop_desc,
		tb_shop.shop_addr,
		tb_shop.phone,
		tb_shop.shop_img,
		tb_shop.priority,
		tb_shop.create_time,
		tb_shop.last_edit_time,
		tb_shop.enable_status,
		tb_shop.advice
		from
		tb_shop,
		tb_area,
		tb_person_info,
		tb_shop_category
		where
		tb_shop.owner_id=#{ownerId}
	</select>

	<select id="queryShopList" resultMap="shopMap">
		SELECT
		s.shop_id,
		s.shop_name,
		s.shop_desc,
		s.shop_addr,
		s.phone,
		s.shop_img,
		s.priority,
		s.create_time,
		s.last_edit_time,
		s.enable_status,
		s.advice,
		a.area_id,
		a.area_name,
		sc.shop_category_id,
		sc.shop_category_name
		FROM
		tb_shop s,
		tb_area a,
		tb_shop_category sc
		<where>
			<!-- 这里加入的是查询条件 -->
			<!-- 查询某一类店铺，这里的类可以是大类也可以时二级类 -->
			<if
				test="shopCondition.shopCategory!=null and shopCondition.shopCategory.shopCategoryId!=null">
				sc.shop_category_id =
				#{shopCondition.shopCategory.shopCategoryId}
			</if>
			<!-- 查询父类为某个shopCategory的所有子类店铺，因为这里的子类不止一个，因此需要用in来做判断而非= -->
			<if
				test="shopCondition.shopCategory!=null and shopCondition.shopCategory.parent!=null and shopCondition.shopCategory.parent.shopCategoryId!=null">
				and s.shop_category_id in (select shop_category_id from
				tb_shop_category where parent_id =
				#{shopCondition.shopCategory.parent.shopCategoryId})
			</if>
			<!-- 查询位于某一区域的店铺 -->
			<if
				test="shopCondition.area!=null and shopCondition.area.areaId!=null">
				AND s.area_id = #{shopCondition.area.areaId}
			</if>
			<!-- 利用名字进行模糊查询 -->
			<if test="shopCondition.shopName!=null">
				AND s.shop_name like
				concat('%',#{shopCondition.shopName},'%')
			</if>
			<!-- 查询属于某一状态的所有店铺 -->
			<if test="shopCondition.enableStatus != null">
				AND s.enable_status = #{shopCondition.enableStatus}
			</if>
			<!-- 查询某用户下所有店铺 -->
			<if
				test="shopCondition.owner!=null and shopCondition.owner.userId!=null">
				AND s.owner_id = #{shopCondition.owner.userId}
			</if>
			<!-- 这里是取交集,因为我们shop表中的area_id和shop_category_id必须要存在于tb_area和tb_shop_category表中 -->
			AND s.area_id = a.area_id
			AND s.shop_category_id = sc.shop_category_id
		</where>
		ORDER BY
		s.priority
		DESC
		LIMIT #{rowIndex},#{pageSize}
	</select>

	<!-- 获取符合查询条件的结果总数,因为上边的queryShopList中加入了分页,因此无法获取符合条件的查询结果的总数量 -->
	<select id="queryShopCount" resultType="int">
		SELECT
		<!-- count(1)表示统计结果集中第一个字段的数量,这里填1只是为了方便,如果是*的话,就统计所有字段,也可以count(字段名) -->
		count(1)
		FROM
		tb_shop s,
		tb_area a,
		tb_shop_category sc
		<where>
			<!-- 这里加入的是查询条件 -->
			<if
				test="shopCondition.shopCategory!=null and shopCondition.shopCategory.shopCategoryId!=null">
				s.shop_category_id =
				#{shopCondition.shopCategory.shopCategoryId}
			</if>
			<!-- 查询某大类下的子类的所有店铺 -->
			<if
				test="shopCondition.shopCategory!=null and shopCondition.shopCategory.parent!=null and shopCondition.shopCategory.parent.shopCategoryId!=null">
				and s.shop_category_id in (select shop_category_id from
				tb_shop_category where parent_id =
				#{shopCondition.shopCategory.parent.shopCategoryId})
			</if>
			<if
				test="shopCondition.area!=null and shopCondition.area.areaId!=null">
				AND s.area_id = #{shopCondition.area.areaId}
			</if>
			<if test="shopCondition.shopName!=null">
				AND s.shop_name like
				concat('%',#{shopCondition.shopName},'%')
			</if>
			<if test="shopCondition.enableStatus != null">
				AND s.enable_status = #{shopCondition.enableStatus}
			</if>
			<if
				test="shopCondition.owner!=null and shopCondition.owner.userId!=null">
				AND s.owner_id = #{shopCondition.owner.userId}
			</if>
			<!-- 这里是取交集,因为我们shop表中的area_id和shop_category_id必须要存在于tb_area和tb_shop_category表中 -->
			<!-- 其实这里不加这个条件也可以，因为mysql中外键的限制，无法给shop的area_id和shop_category_id赋予一个不存在于tb_shop_category中的shop_category_id，会直接报错 -->
			AND s.area_id = a.area_id
			AND s.shop_category_id = sc.shop_category_id
		</where>
	</select>
</mapper>