<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
	<display-name>Archetype Created Web Application</display-name>

	<!-- 请记住tomcat启动一个web项目时，各上下文对象的启动顺序
		１．servletContext
		２．实现listener的WebXmlApplicationContext
		３．Filter
		４．servlet
		其中servletContext是Tomcat的环境上下文，WebXmlApplicationContext是该Web应用的根上下文，各servlet还有自己的上下文对象(WebApplicationContext)，属于WebXmlApplicationContext的子上下文
	-->
	<servlet>
		<servlet-name>spring-dispatcher</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<!-- 如果不配置这个参数，那么Spring会默认的寻找/WEB-INF/applicationContext.xml文件，来加载其中的bean到Spring 
				IoC容器中，约定大于配置！ -->
			<param-name>contextConfigLocation</param-name>
			<!-- 正是因为这里将所有的spring配置文件都整合到了一起，将其中定义的bean都读到了Spring IoC容器中， spring-service才能读到spring-dao中定义的dataSource这个bean -->
			<param-value>classpath:spring/spring-*.xml</param-value>
		</init-param>
	</servlet>

	<!-- 验证码的servlet 本地无法生成验证码，因此使用谷歌的验证码服务 -->
	<servlet>
		<servlet-name>Kaptcha</servlet-name>
		<servlet-class>com.google.code.kaptcha.servlet.KaptchaServlet</servlet-class>
		<!-- 是否有边框 -->
		<init-param>
			<param-name>kaptcha.border</param-name>
			<param-value>no</param-value>
		</init-param>
		<!-- 字体颜色 -->
		<init-param>
			<param-name>kaptcha.textproducer.font.color</param-name>
			<param-value>red</param-value>
		</init-param>
		<!-- 字体大小 -->
		<init-param>
			<param-name>kaptcha.textproducer.font.size</param-name>
			<param-value>43</param-value>
		</init-param>
		<!-- 图片宽度 -->
		<init-param>
			<param-name>kaptcha.image.width</param-name>
			<param-value>135</param-value>
		</init-param>
		<!-- 图片高度 -->
		<init-param>
			<param-name>kaptcha.image.height</param-name>
			<param-value>50</param-value>
		</init-param>
		<!-- 使用哪些字符生成验证码 -->
		<init-param>
			<param-name>kaptcha.textproducer.char.string</param-name>
			<param-value>ACDEFHKPRSTW345679</param-value>
		</init-param>
		<!-- 干扰线的颜色 -->
		<init-param>
			<param-name>kaptcha.noise.color</param-name>
			<param-value>black</param-value>
		</init-param>
		<!-- 字符个数 -->
		<init-param>
			<param-name>kaptcha.textproducer.char.length</param-name>
			<param-value>4</param-value>
		</init-param>
		<!-- 字体 -->
		<init-param>
			<param-name>kaptcha.textproducer.font.names</param-name>
			<param-value>Arial</param-value>
		</init-param>
	</servlet>

	<servlet-mapping>
		<servlet-name>spring-dispatcher</servlet-name>
		<!-- 默认匹配所有的请求，也可以这里也可以写*.do，这样就会对xxx.do请求做出反应 -->
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>Kaptcha</servlet-name>
		<url-pattern>/Kaptcha</url-pattern>
	</servlet-mapping>
</web-app>

